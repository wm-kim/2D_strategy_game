// Copyright (c) Supernova Technologies LLC
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nova.Editor.Serialization
{
    
    
    internal class Wrappers
    {
        
        public class _Alignment : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _xProp;
            
            private UnityEditor.SerializedProperty _yProp;
            
            private UnityEditor.SerializedProperty _zProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public Nova.HorizontalAlignment X
            {
                get
                {
                    return ((Nova.HorizontalAlignment)(this.XProp.intValue));
                }
                set
                {
                    this.XProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty XProp
            {
                get
                {
                    if ((_xProp == null))
                    {
                        _xProp = this._serializedProperty.FindPropertyRelative("X");
                    }
                    return _xProp;
                }
            }
            
            public Nova.VerticalAlignment Y
            {
                get
                {
                    return ((Nova.VerticalAlignment)(this.YProp.intValue));
                }
                set
                {
                    this.YProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty YProp
            {
                get
                {
                    if ((_yProp == null))
                    {
                        _yProp = this._serializedProperty.FindPropertyRelative("Y");
                    }
                    return _yProp;
                }
            }
            
            public Nova.DepthAlignment Z
            {
                get
                {
                    return ((Nova.DepthAlignment)(this.ZProp.intValue));
                }
                set
                {
                    this.ZProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty ZProp
            {
                get
                {
                    if ((_zProp == null))
                    {
                        _zProp = this._serializedProperty.FindPropertyRelative("Z");
                    }
                    return _zProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _AutoLayout : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _axisProp;
            
            private _Length _spacing;
            
            private UnityEditor.SerializedProperty _spacingProp;
            
            private _MinMax _spacingminmax;
            
            private UnityEditor.SerializedProperty _spacingminmaxProp;
            
            private UnityEditor.SerializedProperty _autospaceProp;
            
            private UnityEditor.SerializedProperty _reverseorderProp;
            
            private UnityEditor.SerializedProperty _alignmentProp;
            
            private UnityEditor.SerializedProperty _offsetProp;
            
            private _CrossLayout _cross;
            
            private UnityEditor.SerializedProperty _crossProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public Nova.Axis Axis
            {
                get
                {
                    return ((Nova.Axis)(this.AxisProp.intValue));
                }
                set
                {
                    this.AxisProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty AxisProp
            {
                get
                {
                    if ((_axisProp == null))
                    {
                        _axisProp = this._serializedProperty.FindPropertyRelative("Axis");
                    }
                    return _axisProp;
                }
            }
            
            public _Length Spacing
            {
                get
                {
                    if ((_spacing == null))
                    {
                        _spacing = new _Length();
                        _spacing.SerializedProperty = this.SpacingProp;
                    }
                    return _spacing;
                }
            }
            
            public UnityEditor.SerializedProperty SpacingProp
            {
                get
                {
                    if ((_spacingProp == null))
                    {
                        _spacingProp = this._serializedProperty.FindPropertyRelative("Spacing");
                    }
                    return _spacingProp;
                }
            }
            
            public _MinMax SpacingMinMax
            {
                get
                {
                    if ((_spacingminmax == null))
                    {
                        _spacingminmax = new _MinMax();
                        _spacingminmax.SerializedProperty = this.SpacingMinMaxProp;
                    }
                    return _spacingminmax;
                }
            }
            
            public UnityEditor.SerializedProperty SpacingMinMaxProp
            {
                get
                {
                    if ((_spacingminmaxProp == null))
                    {
                        _spacingminmaxProp = this._serializedProperty.FindPropertyRelative("SpacingMinMax");
                    }
                    return _spacingminmaxProp;
                }
            }
            
            public bool AutoSpace
            {
                get
                {
                    return this.AutoSpaceProp.boolValue;
                }
                set
                {
                    this.AutoSpaceProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty AutoSpaceProp
            {
                get
                {
                    if ((_autospaceProp == null))
                    {
                        _autospaceProp = this._serializedProperty.FindPropertyRelative("AutoSpace");
                    }
                    return _autospaceProp;
                }
            }
            
            public bool ReverseOrder
            {
                get
                {
                    return this.ReverseOrderProp.boolValue;
                }
                set
                {
                    this.ReverseOrderProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ReverseOrderProp
            {
                get
                {
                    if ((_reverseorderProp == null))
                    {
                        _reverseorderProp = this._serializedProperty.FindPropertyRelative("ReverseOrder");
                    }
                    return _reverseorderProp;
                }
            }
            
            public int alignment
            {
                get
                {
                    return this.alignmentProp.intValue;
                }
                set
                {
                    this.alignmentProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty alignmentProp
            {
                get
                {
                    if ((_alignmentProp == null))
                    {
                        _alignmentProp = this._serializedProperty.FindPropertyRelative("alignment");
                    }
                    return _alignmentProp;
                }
            }
            
            public float Offset
            {
                get
                {
                    return this.OffsetProp.floatValue;
                }
                set
                {
                    this.OffsetProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty OffsetProp
            {
                get
                {
                    if ((_offsetProp == null))
                    {
                        _offsetProp = this._serializedProperty.FindPropertyRelative("Offset");
                    }
                    return _offsetProp;
                }
            }
            
            public _CrossLayout Cross
            {
                get
                {
                    if ((_cross == null))
                    {
                        _cross = new _CrossLayout();
                        _cross.SerializedProperty = this.CrossProp;
                    }
                    return _cross;
                }
            }
            
            public UnityEditor.SerializedProperty CrossProp
            {
                get
                {
                    if ((_crossProp == null))
                    {
                        _crossProp = this._serializedProperty.FindPropertyRelative("Cross");
                    }
                    return _crossProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _AutoSize3 : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _xProp;
            
            private UnityEditor.SerializedProperty _yProp;
            
            private UnityEditor.SerializedProperty _zProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public Nova.Internal.AutoSize X
            {
                get
                {
                    return ((Nova.Internal.AutoSize)(this.XProp.intValue));
                }
                set
                {
                    this.XProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty XProp
            {
                get
                {
                    if ((_xProp == null))
                    {
                        _xProp = this._serializedProperty.FindPropertyRelative("X");
                    }
                    return _xProp;
                }
            }
            
            public Nova.Internal.AutoSize Y
            {
                get
                {
                    return ((Nova.Internal.AutoSize)(this.YProp.intValue));
                }
                set
                {
                    this.YProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty YProp
            {
                get
                {
                    if ((_yProp == null))
                    {
                        _yProp = this._serializedProperty.FindPropertyRelative("Y");
                    }
                    return _yProp;
                }
            }
            
            public Nova.Internal.AutoSize Z
            {
                get
                {
                    return ((Nova.Internal.AutoSize)(this.ZProp.intValue));
                }
                set
                {
                    this.ZProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty ZProp
            {
                get
                {
                    if ((_zProp == null))
                    {
                        _zProp = this._serializedProperty.FindPropertyRelative("Z");
                    }
                    return _zProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _BaseRenderInfo : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _zindexProp;
            
            private UnityEditor.SerializedProperty _blocktypeProp;
            
            private UnityEditor.SerializedProperty _visibleProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty ZIndexProp
            {
                get
                {
                    if ((_zindexProp == null))
                    {
                        _zindexProp = this._serializedProperty.FindPropertyRelative("ZIndex");
                    }
                    return _zindexProp;
                }
            }
            
            public Nova.BlockType BlockType
            {
                get
                {
                    return ((Nova.BlockType)(this.BlockTypeProp.intValue));
                }
                set
                {
                    this.BlockTypeProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty BlockTypeProp
            {
                get
                {
                    if ((_blocktypeProp == null))
                    {
                        _blocktypeProp = this._serializedProperty.FindPropertyRelative("BlockType");
                    }
                    return _blocktypeProp;
                }
            }
            
            public bool Visible
            {
                get
                {
                    return this.VisibleProp.boolValue;
                }
                set
                {
                    this.VisibleProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty VisibleProp
            {
                get
                {
                    if ((_visibleProp == null))
                    {
                        _visibleProp = this._serializedProperty.FindPropertyRelative("Visible");
                    }
                    return _visibleProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _BlockTool : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _m_targetProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_Targets
            {
                get
                {
                    return this._serializedProperty.FindPropertyRelative("m_Targets");
                }
            }
            
            public UnityEngine.Object m_Target
            {
                get
                {
                    return ((UnityEngine.Object)(this.m_TargetProp.objectReferenceValue));
                }
                set
                {
                    this.m_TargetProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_TargetProp
            {
                get
                {
                    if ((_m_targetProp == null))
                    {
                        _m_targetProp = this._serializedProperty.FindPropertyRelative("m_Target");
                    }
                    return _m_targetProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Border : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _colorProp;
            
            private _Length _width;
            
            private UnityEditor.SerializedProperty _widthProp;
            
            private UnityEditor.SerializedProperty _enabledProp;
            
            private UnityEditor.SerializedProperty _directionProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Color Color
            {
                get
                {
                    return this.ColorProp.colorValue;
                }
                set
                {
                    this.ColorProp.colorValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ColorProp
            {
                get
                {
                    if ((_colorProp == null))
                    {
                        _colorProp = this._serializedProperty.FindPropertyRelative("Color");
                    }
                    return _colorProp;
                }
            }
            
            public _Length Width
            {
                get
                {
                    if ((_width == null))
                    {
                        _width = new _Length();
                        _width.SerializedProperty = this.WidthProp;
                    }
                    return _width;
                }
            }
            
            public UnityEditor.SerializedProperty WidthProp
            {
                get
                {
                    if ((_widthProp == null))
                    {
                        _widthProp = this._serializedProperty.FindPropertyRelative("Width");
                    }
                    return _widthProp;
                }
            }
            
            public bool Enabled
            {
                get
                {
                    return this.EnabledProp.boolValue;
                }
                set
                {
                    this.EnabledProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty EnabledProp
            {
                get
                {
                    if ((_enabledProp == null))
                    {
                        _enabledProp = this._serializedProperty.FindPropertyRelative("Enabled");
                    }
                    return _enabledProp;
                }
            }
            
            public Nova.BorderDirection Direction
            {
                get
                {
                    return ((Nova.BorderDirection)(this.DirectionProp.intValue));
                }
                set
                {
                    this.DirectionProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty DirectionProp
            {
                get
                {
                    if ((_directionProp == null))
                    {
                        _directionProp = this._serializedProperty.FindPropertyRelative("Direction");
                    }
                    return _directionProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _ClipMask : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _ClipMaskInfo _info;
            
            private UnityEditor.SerializedProperty _infoProp;
            
            private UnityEditor.SerializedProperty _masktextureProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _ClipMaskInfo info
            {
                get
                {
                    if ((_info == null))
                    {
                        _info = new _ClipMaskInfo();
                        _info.SerializedProperty = this.infoProp;
                    }
                    return _info;
                }
            }
            
            public UnityEditor.SerializedProperty infoProp
            {
                get
                {
                    if ((_infoProp == null))
                    {
                        _infoProp = this._serializedProperty.FindPropertyRelative("info");
                    }
                    return _infoProp;
                }
            }
            
            public UnityEngine.Texture maskTexture
            {
                get
                {
                    return ((UnityEngine.Texture)(this.maskTextureProp.objectReferenceValue));
                }
                set
                {
                    this.maskTextureProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty maskTextureProp
            {
                get
                {
                    if ((_masktextureProp == null))
                    {
                        _masktextureProp = this._serializedProperty.FindPropertyRelative("maskTexture");
                    }
                    return _masktextureProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _ClipMaskInfo : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _colorProp;
            
            private UnityEditor.SerializedProperty _clipProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Color Color
            {
                get
                {
                    return this.ColorProp.colorValue;
                }
                set
                {
                    this.ColorProp.colorValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ColorProp
            {
                get
                {
                    if ((_colorProp == null))
                    {
                        _colorProp = this._serializedProperty.FindPropertyRelative("Color");
                    }
                    return _colorProp;
                }
            }
            
            public bool Clip
            {
                get
                {
                    return this.ClipProp.boolValue;
                }
                set
                {
                    this.ClipProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ClipProp
            {
                get
                {
                    if ((_clipProp == null))
                    {
                        _clipProp = this._serializedProperty.FindPropertyRelative("Clip");
                    }
                    return _clipProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _CoreBlock : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _DataStoreID _sourceid;
            
            private UnityEditor.SerializedProperty _sourceidProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _DataStoreID sourceID
            {
                get
                {
                    if ((_sourceid == null))
                    {
                        _sourceid = new _DataStoreID();
                        _sourceid.SerializedProperty = this.sourceIDProp;
                    }
                    return _sourceid;
                }
            }
            
            public UnityEditor.SerializedProperty sourceIDProp
            {
                get
                {
                    if ((_sourceidProp == null))
                    {
                        _sourceidProp = this._serializedProperty.FindPropertyRelative("sourceID");
                    }
                    return _sourceidProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _CrossLayout : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _axisProp;
            
            private _Length _spacing;
            
            private UnityEditor.SerializedProperty _spacingProp;
            
            private _MinMax _spacingminmax;
            
            private UnityEditor.SerializedProperty _spacingminmaxProp;
            
            private UnityEditor.SerializedProperty _autospaceProp;
            
            private UnityEditor.SerializedProperty _reverseorderProp;
            
            private UnityEditor.SerializedProperty _alignmentProp;
            
            private UnityEditor.SerializedProperty _expandtogridProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public Nova.Axis Axis
            {
                get
                {
                    return ((Nova.Axis)(this.AxisProp.intValue));
                }
                set
                {
                    this.AxisProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty AxisProp
            {
                get
                {
                    if ((_axisProp == null))
                    {
                        _axisProp = this._serializedProperty.FindPropertyRelative("Axis");
                    }
                    return _axisProp;
                }
            }
            
            public _Length Spacing
            {
                get
                {
                    if ((_spacing == null))
                    {
                        _spacing = new _Length();
                        _spacing.SerializedProperty = this.SpacingProp;
                    }
                    return _spacing;
                }
            }
            
            public UnityEditor.SerializedProperty SpacingProp
            {
                get
                {
                    if ((_spacingProp == null))
                    {
                        _spacingProp = this._serializedProperty.FindPropertyRelative("Spacing");
                    }
                    return _spacingProp;
                }
            }
            
            public _MinMax SpacingMinMax
            {
                get
                {
                    if ((_spacingminmax == null))
                    {
                        _spacingminmax = new _MinMax();
                        _spacingminmax.SerializedProperty = this.SpacingMinMaxProp;
                    }
                    return _spacingminmax;
                }
            }
            
            public UnityEditor.SerializedProperty SpacingMinMaxProp
            {
                get
                {
                    if ((_spacingminmaxProp == null))
                    {
                        _spacingminmaxProp = this._serializedProperty.FindPropertyRelative("SpacingMinMax");
                    }
                    return _spacingminmaxProp;
                }
            }
            
            public bool AutoSpace
            {
                get
                {
                    return this.AutoSpaceProp.boolValue;
                }
                set
                {
                    this.AutoSpaceProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty AutoSpaceProp
            {
                get
                {
                    if ((_autospaceProp == null))
                    {
                        _autospaceProp = this._serializedProperty.FindPropertyRelative("AutoSpace");
                    }
                    return _autospaceProp;
                }
            }
            
            public bool ReverseOrder
            {
                get
                {
                    return this.ReverseOrderProp.boolValue;
                }
                set
                {
                    this.ReverseOrderProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ReverseOrderProp
            {
                get
                {
                    if ((_reverseorderProp == null))
                    {
                        _reverseorderProp = this._serializedProperty.FindPropertyRelative("ReverseOrder");
                    }
                    return _reverseorderProp;
                }
            }
            
            public int alignment
            {
                get
                {
                    return this.alignmentProp.intValue;
                }
                set
                {
                    this.alignmentProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty alignmentProp
            {
                get
                {
                    if ((_alignmentProp == null))
                    {
                        _alignmentProp = this._serializedProperty.FindPropertyRelative("alignment");
                    }
                    return _alignmentProp;
                }
            }
            
            public bool ExpandToGrid
            {
                get
                {
                    return this.ExpandToGridProp.boolValue;
                }
                set
                {
                    this.ExpandToGridProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ExpandToGridProp
            {
                get
                {
                    if ((_expandtogridProp == null))
                    {
                        _expandtogridProp = this._serializedProperty.FindPropertyRelative("ExpandToGrid");
                    }
                    return _expandtogridProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _DataStoreID : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _valProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty valProp
            {
                get
                {
                    if ((_valProp == null))
                    {
                        _valProp = this._serializedProperty.FindPropertyRelative("val");
                    }
                    return _valProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _GestureRecognizer : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _obstructdragsProp;
            
            private UnityEditor.SerializedProperty _dragthresholdProp;
            
            private UnityEditor.SerializedProperty _lowaccuracydragthresholdProp;
            
            private UnityEditor.SerializedProperty _clickbehaviorProp;
            
            private UnityEditor.SerializedProperty _navigableProp;
            
            private UnityEditor.SerializedProperty _onselectProp;
            
            private UnityEditor.SerializedProperty _autoselectProp;
            
            private _NavNode _navigation;
            
            private UnityEditor.SerializedProperty _navigationProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public bool ObstructDrags
            {
                get
                {
                    return this.ObstructDragsProp.boolValue;
                }
                set
                {
                    this.ObstructDragsProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ObstructDragsProp
            {
                get
                {
                    if ((_obstructdragsProp == null))
                    {
                        _obstructdragsProp = this._serializedProperty.FindPropertyRelative("ObstructDrags");
                    }
                    return _obstructdragsProp;
                }
            }
            
            public float DragThreshold
            {
                get
                {
                    return this.DragThresholdProp.floatValue;
                }
                set
                {
                    this.DragThresholdProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty DragThresholdProp
            {
                get
                {
                    if ((_dragthresholdProp == null))
                    {
                        _dragthresholdProp = this._serializedProperty.FindPropertyRelative("DragThreshold");
                    }
                    return _dragthresholdProp;
                }
            }
            
            public float LowAccuracyDragThreshold
            {
                get
                {
                    return this.LowAccuracyDragThresholdProp.floatValue;
                }
                set
                {
                    this.LowAccuracyDragThresholdProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty LowAccuracyDragThresholdProp
            {
                get
                {
                    if ((_lowaccuracydragthresholdProp == null))
                    {
                        _lowaccuracydragthresholdProp = this._serializedProperty.FindPropertyRelative("LowAccuracyDragThreshold");
                    }
                    return _lowaccuracydragthresholdProp;
                }
            }
            
            public Nova.ClickBehavior ClickBehavior
            {
                get
                {
                    return ((Nova.ClickBehavior)(this.ClickBehaviorProp.intValue));
                }
                set
                {
                    this.ClickBehaviorProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty ClickBehaviorProp
            {
                get
                {
                    if ((_clickbehaviorProp == null))
                    {
                        _clickbehaviorProp = this._serializedProperty.FindPropertyRelative("ClickBehavior");
                    }
                    return _clickbehaviorProp;
                }
            }
            
            public bool navigable
            {
                get
                {
                    return this.navigableProp.boolValue;
                }
                set
                {
                    this.navigableProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty navigableProp
            {
                get
                {
                    if ((_navigableProp == null))
                    {
                        _navigableProp = this._serializedProperty.FindPropertyRelative("navigable");
                    }
                    return _navigableProp;
                }
            }
            
            public Nova.SelectBehavior onSelect
            {
                get
                {
                    return ((Nova.SelectBehavior)(this.onSelectProp.intValue));
                }
                set
                {
                    this.onSelectProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty onSelectProp
            {
                get
                {
                    if ((_onselectProp == null))
                    {
                        _onselectProp = this._serializedProperty.FindPropertyRelative("onSelect");
                    }
                    return _onselectProp;
                }
            }
            
            public bool autoSelect
            {
                get
                {
                    return this.autoSelectProp.boolValue;
                }
                set
                {
                    this.autoSelectProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty autoSelectProp
            {
                get
                {
                    if ((_autoselectProp == null))
                    {
                        _autoselectProp = this._serializedProperty.FindPropertyRelative("autoSelect");
                    }
                    return _autoselectProp;
                }
            }
            
            public _NavNode Navigation
            {
                get
                {
                    if ((_navigation == null))
                    {
                        _navigation = new _NavNode();
                        _navigation.SerializedProperty = this.NavigationProp;
                    }
                    return _navigation;
                }
            }
            
            public UnityEditor.SerializedProperty NavigationProp
            {
                get
                {
                    if ((_navigationProp == null))
                    {
                        _navigationProp = this._serializedProperty.FindPropertyRelative("Navigation");
                    }
                    return _navigationProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _GradientTool : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _m_targetProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_Targets
            {
                get
                {
                    return this._serializedProperty.FindPropertyRelative("m_Targets");
                }
            }
            
            public UnityEngine.Object m_Target
            {
                get
                {
                    return ((UnityEngine.Object)(this.m_TargetProp.objectReferenceValue));
                }
                set
                {
                    this.m_TargetProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_TargetProp
            {
                get
                {
                    if ((_m_targetProp == null))
                    {
                        _m_targetProp = this._serializedProperty.FindPropertyRelative("m_Target");
                    }
                    return _m_targetProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _GridView : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _crossaxisProp;
            
            private UnityEditor.SerializedProperty _crossaxisitemcountProp;
            
            private UnityEditor.SerializedProperty _virtualblockserializerProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public Nova.Axis crossAxis
            {
                get
                {
                    return ((Nova.Axis)(this.crossAxisProp.intValue));
                }
                set
                {
                    this.crossAxisProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty crossAxisProp
            {
                get
                {
                    if ((_crossaxisProp == null))
                    {
                        _crossaxisProp = this._serializedProperty.FindPropertyRelative("crossAxis");
                    }
                    return _crossaxisProp;
                }
            }
            
            public int crossAxisItemCount
            {
                get
                {
                    return this.crossAxisItemCountProp.intValue;
                }
                set
                {
                    this.crossAxisItemCountProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty crossAxisItemCountProp
            {
                get
                {
                    if ((_crossaxisitemcountProp == null))
                    {
                        _crossaxisitemcountProp = this._serializedProperty.FindPropertyRelative("crossAxisItemCount");
                    }
                    return _crossaxisitemcountProp;
                }
            }
            
            public Nova.Internal.VirtualBlockSerializer virtualBlockSerializer
            {
                get
                {
                    return ((Nova.Internal.VirtualBlockSerializer)(this.virtualBlockSerializerProp.objectReferenceValue));
                }
                set
                {
                    this.virtualBlockSerializerProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty virtualBlockSerializerProp
            {
                get
                {
                    if ((_virtualblockserializerProp == null))
                    {
                        _virtualblockserializerProp = this._serializedProperty.FindPropertyRelative("virtualBlockSerializer");
                    }
                    return _virtualblockserializerProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _ImageAdjustment : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _centeruvProp;
            
            private UnityEditor.SerializedProperty _uvscaleProp;
            
            private UnityEditor.SerializedProperty _pixelsperunitmultiplierProp;
            
            private UnityEditor.SerializedProperty _scalemodeProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Vector2 CenterUV
            {
                get
                {
                    return this.CenterUVProp.vector2Value;
                }
                set
                {
                    this.CenterUVProp.vector2Value = value;
                }
            }
            
            public UnityEditor.SerializedProperty CenterUVProp
            {
                get
                {
                    if ((_centeruvProp == null))
                    {
                        _centeruvProp = this._serializedProperty.FindPropertyRelative("CenterUV");
                    }
                    return _centeruvProp;
                }
            }
            
            public UnityEngine.Vector2 UVScale
            {
                get
                {
                    return this.UVScaleProp.vector2Value;
                }
                set
                {
                    this.UVScaleProp.vector2Value = value;
                }
            }
            
            public UnityEditor.SerializedProperty UVScaleProp
            {
                get
                {
                    if ((_uvscaleProp == null))
                    {
                        _uvscaleProp = this._serializedProperty.FindPropertyRelative("UVScale");
                    }
                    return _uvscaleProp;
                }
            }
            
            public float PixelsPerUnitMultiplier
            {
                get
                {
                    return this.PixelsPerUnitMultiplierProp.floatValue;
                }
                set
                {
                    this.PixelsPerUnitMultiplierProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty PixelsPerUnitMultiplierProp
            {
                get
                {
                    if ((_pixelsperunitmultiplierProp == null))
                    {
                        _pixelsperunitmultiplierProp = this._serializedProperty.FindPropertyRelative("PixelsPerUnitMultiplier");
                    }
                    return _pixelsperunitmultiplierProp;
                }
            }
            
            public Nova.ImageScaleMode scaleMode
            {
                get
                {
                    return ((Nova.ImageScaleMode)(this.scaleModeProp.intValue));
                }
                set
                {
                    this.scaleModeProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty scaleModeProp
            {
                get
                {
                    if ((_scalemodeProp == null))
                    {
                        _scalemodeProp = this._serializedProperty.FindPropertyRelative("scaleMode");
                    }
                    return _scalemodeProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _ImageData : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _ImageAdjustment _adjustment;
            
            private UnityEditor.SerializedProperty _adjustmentProp;
            
            private UnityEditor.SerializedProperty _modeProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _ImageAdjustment Adjustment
            {
                get
                {
                    if ((_adjustment == null))
                    {
                        _adjustment = new _ImageAdjustment();
                        _adjustment.SerializedProperty = this.AdjustmentProp;
                    }
                    return _adjustment;
                }
            }
            
            public UnityEditor.SerializedProperty AdjustmentProp
            {
                get
                {
                    if ((_adjustmentProp == null))
                    {
                        _adjustmentProp = this._serializedProperty.FindPropertyRelative("Adjustment");
                    }
                    return _adjustmentProp;
                }
            }
            
            public Nova.ImagePackMode Mode
            {
                get
                {
                    return ((Nova.ImagePackMode)(this.ModeProp.intValue));
                }
                set
                {
                    this.ModeProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty ModeProp
            {
                get
                {
                    if ((_modeProp == null))
                    {
                        _modeProp = this._serializedProperty.FindPropertyRelative("Mode");
                    }
                    return _modeProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Interactable : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _draggableProp;
            
            private UnityEditor.SerializedProperty _gesturespaceProp;
            
            private UnityEditor.SerializedProperty _obstructdragsProp;
            
            private UnityEditor.SerializedProperty _dragthresholdProp;
            
            private UnityEditor.SerializedProperty _lowaccuracydragthresholdProp;
            
            private UnityEditor.SerializedProperty _clickbehaviorProp;
            
            private UnityEditor.SerializedProperty _onselectProp;
            
            private UnityEditor.SerializedProperty _autoselectProp;
            
            private _NavNode _navigation;
            
            private UnityEditor.SerializedProperty _navigationProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty draggableProp
            {
                get
                {
                    if ((_draggableProp == null))
                    {
                        _draggableProp = this._serializedProperty.FindPropertyRelative("draggable");
                    }
                    return _draggableProp;
                }
            }
            
            public Nova.GestureSpace GestureSpace
            {
                get
                {
                    return ((Nova.GestureSpace)(this.GestureSpaceProp.intValue));
                }
                set
                {
                    this.GestureSpaceProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty GestureSpaceProp
            {
                get
                {
                    if ((_gesturespaceProp == null))
                    {
                        _gesturespaceProp = this._serializedProperty.FindPropertyRelative("GestureSpace");
                    }
                    return _gesturespaceProp;
                }
            }
            
            public bool ObstructDrags
            {
                get
                {
                    return this.ObstructDragsProp.boolValue;
                }
                set
                {
                    this.ObstructDragsProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ObstructDragsProp
            {
                get
                {
                    if ((_obstructdragsProp == null))
                    {
                        _obstructdragsProp = this._serializedProperty.FindPropertyRelative("ObstructDrags");
                    }
                    return _obstructdragsProp;
                }
            }
            
            public float DragThreshold
            {
                get
                {
                    return this.DragThresholdProp.floatValue;
                }
                set
                {
                    this.DragThresholdProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty DragThresholdProp
            {
                get
                {
                    if ((_dragthresholdProp == null))
                    {
                        _dragthresholdProp = this._serializedProperty.FindPropertyRelative("DragThreshold");
                    }
                    return _dragthresholdProp;
                }
            }
            
            public float LowAccuracyDragThreshold
            {
                get
                {
                    return this.LowAccuracyDragThresholdProp.floatValue;
                }
                set
                {
                    this.LowAccuracyDragThresholdProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty LowAccuracyDragThresholdProp
            {
                get
                {
                    if ((_lowaccuracydragthresholdProp == null))
                    {
                        _lowaccuracydragthresholdProp = this._serializedProperty.FindPropertyRelative("LowAccuracyDragThreshold");
                    }
                    return _lowaccuracydragthresholdProp;
                }
            }
            
            public Nova.ClickBehavior ClickBehavior
            {
                get
                {
                    return ((Nova.ClickBehavior)(this.ClickBehaviorProp.intValue));
                }
                set
                {
                    this.ClickBehaviorProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty ClickBehaviorProp
            {
                get
                {
                    if ((_clickbehaviorProp == null))
                    {
                        _clickbehaviorProp = this._serializedProperty.FindPropertyRelative("ClickBehavior");
                    }
                    return _clickbehaviorProp;
                }
            }
            
            public Nova.SelectBehavior onSelect
            {
                get
                {
                    return ((Nova.SelectBehavior)(this.onSelectProp.intValue));
                }
                set
                {
                    this.onSelectProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty onSelectProp
            {
                get
                {
                    if ((_onselectProp == null))
                    {
                        _onselectProp = this._serializedProperty.FindPropertyRelative("onSelect");
                    }
                    return _onselectProp;
                }
            }
            
            public bool autoSelect
            {
                get
                {
                    return this.autoSelectProp.boolValue;
                }
                set
                {
                    this.autoSelectProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty autoSelectProp
            {
                get
                {
                    if ((_autoselectProp == null))
                    {
                        _autoselectProp = this._serializedProperty.FindPropertyRelative("autoSelect");
                    }
                    return _autoselectProp;
                }
            }
            
            public _NavNode Navigation
            {
                get
                {
                    if ((_navigation == null))
                    {
                        _navigation = new _NavNode();
                        _navigation.SerializedProperty = this.NavigationProp;
                    }
                    return _navigation;
                }
            }
            
            public UnityEditor.SerializedProperty NavigationProp
            {
                get
                {
                    if ((_navigationProp == null))
                    {
                        _navigationProp = this._serializedProperty.FindPropertyRelative("Navigation");
                    }
                    return _navigationProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _ItemView : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _visualsProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public object visuals
            {
                set
                {
                    this.visualsProp.managedReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty visualsProp
            {
                get
                {
                    if ((_visualsProp == null))
                    {
                        _visualsProp = this._serializedProperty.FindPropertyRelative("visuals");
                    }
                    return _visualsProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Layout : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _Length3 _size;
            
            private UnityEditor.SerializedProperty _sizeProp;
            
            private _Length3 _position;
            
            private UnityEditor.SerializedProperty _positionProp;
            
            private _LengthBounds _padding;
            
            private UnityEditor.SerializedProperty _paddingProp;
            
            private _LengthBounds _margin;
            
            private UnityEditor.SerializedProperty _marginProp;
            
            private _MinMax3 _sizeminmax;
            
            private UnityEditor.SerializedProperty _sizeminmaxProp;
            
            private _MinMax3 _positionminmax;
            
            private UnityEditor.SerializedProperty _positionminmaxProp;
            
            private _MinMaxBounds _paddingminmax;
            
            private UnityEditor.SerializedProperty _paddingminmaxProp;
            
            private _MinMaxBounds _marginminmax;
            
            private UnityEditor.SerializedProperty _marginminmaxProp;
            
            private _Alignment _alignment;
            
            private UnityEditor.SerializedProperty _alignmentProp;
            
            private UnityEditor.SerializedProperty _autosizeProp;
            
            private UnityEditor.SerializedProperty _rotatesizeProp;
            
            private UnityEditor.SerializedProperty _aspectratioProp;
            
            private UnityEditor.SerializedProperty _aspectratioaxisProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _Length3 Size
            {
                get
                {
                    if ((_size == null))
                    {
                        _size = new _Length3();
                        _size.SerializedProperty = this.SizeProp;
                    }
                    return _size;
                }
            }
            
            public UnityEditor.SerializedProperty SizeProp
            {
                get
                {
                    if ((_sizeProp == null))
                    {
                        _sizeProp = this._serializedProperty.FindPropertyRelative("Size");
                    }
                    return _sizeProp;
                }
            }
            
            public _Length3 Position
            {
                get
                {
                    if ((_position == null))
                    {
                        _position = new _Length3();
                        _position.SerializedProperty = this.PositionProp;
                    }
                    return _position;
                }
            }
            
            public UnityEditor.SerializedProperty PositionProp
            {
                get
                {
                    if ((_positionProp == null))
                    {
                        _positionProp = this._serializedProperty.FindPropertyRelative("Position");
                    }
                    return _positionProp;
                }
            }
            
            public _LengthBounds Padding
            {
                get
                {
                    if ((_padding == null))
                    {
                        _padding = new _LengthBounds();
                        _padding.SerializedProperty = this.PaddingProp;
                    }
                    return _padding;
                }
            }
            
            public UnityEditor.SerializedProperty PaddingProp
            {
                get
                {
                    if ((_paddingProp == null))
                    {
                        _paddingProp = this._serializedProperty.FindPropertyRelative("Padding");
                    }
                    return _paddingProp;
                }
            }
            
            public _LengthBounds Margin
            {
                get
                {
                    if ((_margin == null))
                    {
                        _margin = new _LengthBounds();
                        _margin.SerializedProperty = this.MarginProp;
                    }
                    return _margin;
                }
            }
            
            public UnityEditor.SerializedProperty MarginProp
            {
                get
                {
                    if ((_marginProp == null))
                    {
                        _marginProp = this._serializedProperty.FindPropertyRelative("Margin");
                    }
                    return _marginProp;
                }
            }
            
            public _MinMax3 SizeMinMax
            {
                get
                {
                    if ((_sizeminmax == null))
                    {
                        _sizeminmax = new _MinMax3();
                        _sizeminmax.SerializedProperty = this.SizeMinMaxProp;
                    }
                    return _sizeminmax;
                }
            }
            
            public UnityEditor.SerializedProperty SizeMinMaxProp
            {
                get
                {
                    if ((_sizeminmaxProp == null))
                    {
                        _sizeminmaxProp = this._serializedProperty.FindPropertyRelative("SizeMinMax");
                    }
                    return _sizeminmaxProp;
                }
            }
            
            public _MinMax3 PositionMinMax
            {
                get
                {
                    if ((_positionminmax == null))
                    {
                        _positionminmax = new _MinMax3();
                        _positionminmax.SerializedProperty = this.PositionMinMaxProp;
                    }
                    return _positionminmax;
                }
            }
            
            public UnityEditor.SerializedProperty PositionMinMaxProp
            {
                get
                {
                    if ((_positionminmaxProp == null))
                    {
                        _positionminmaxProp = this._serializedProperty.FindPropertyRelative("PositionMinMax");
                    }
                    return _positionminmaxProp;
                }
            }
            
            public _MinMaxBounds PaddingMinMax
            {
                get
                {
                    if ((_paddingminmax == null))
                    {
                        _paddingminmax = new _MinMaxBounds();
                        _paddingminmax.SerializedProperty = this.PaddingMinMaxProp;
                    }
                    return _paddingminmax;
                }
            }
            
            public UnityEditor.SerializedProperty PaddingMinMaxProp
            {
                get
                {
                    if ((_paddingminmaxProp == null))
                    {
                        _paddingminmaxProp = this._serializedProperty.FindPropertyRelative("PaddingMinMax");
                    }
                    return _paddingminmaxProp;
                }
            }
            
            public _MinMaxBounds MarginMinMax
            {
                get
                {
                    if ((_marginminmax == null))
                    {
                        _marginminmax = new _MinMaxBounds();
                        _marginminmax.SerializedProperty = this.MarginMinMaxProp;
                    }
                    return _marginminmax;
                }
            }
            
            public UnityEditor.SerializedProperty MarginMinMaxProp
            {
                get
                {
                    if ((_marginminmaxProp == null))
                    {
                        _marginminmaxProp = this._serializedProperty.FindPropertyRelative("MarginMinMax");
                    }
                    return _marginminmaxProp;
                }
            }
            
            public _Alignment Alignment
            {
                get
                {
                    if ((_alignment == null))
                    {
                        _alignment = new _Alignment();
                        _alignment.SerializedProperty = this.AlignmentProp;
                    }
                    return _alignment;
                }
            }
            
            public UnityEditor.SerializedProperty AlignmentProp
            {
                get
                {
                    if ((_alignmentProp == null))
                    {
                        _alignmentProp = this._serializedProperty.FindPropertyRelative("Alignment");
                    }
                    return _alignmentProp;
                }
            }
            
            public UnityEditor.SerializedProperty AutoSizeProp
            {
                get
                {
                    if ((_autosizeProp == null))
                    {
                        _autosizeProp = this._serializedProperty.FindPropertyRelative("AutoSize");
                    }
                    return _autosizeProp;
                }
            }
            
            public bool RotateSize
            {
                get
                {
                    return this.RotateSizeProp.boolValue;
                }
                set
                {
                    this.RotateSizeProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty RotateSizeProp
            {
                get
                {
                    if ((_rotatesizeProp == null))
                    {
                        _rotatesizeProp = this._serializedProperty.FindPropertyRelative("RotateSize");
                    }
                    return _rotatesizeProp;
                }
            }
            
            public UnityEngine.Vector3 AspectRatio
            {
                get
                {
                    return this.AspectRatioProp.vector3Value;
                }
                set
                {
                    this.AspectRatioProp.vector3Value = value;
                }
            }
            
            public UnityEditor.SerializedProperty AspectRatioProp
            {
                get
                {
                    if ((_aspectratioProp == null))
                    {
                        _aspectratioProp = this._serializedProperty.FindPropertyRelative("AspectRatio");
                    }
                    return _aspectratioProp;
                }
            }
            
            public Nova.Axis AspectRatioAxis
            {
                get
                {
                    return ((Nova.Axis)(this.AspectRatioAxisProp.intValue));
                }
                set
                {
                    this.AspectRatioAxisProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty AspectRatioAxisProp
            {
                get
                {
                    if ((_aspectratioaxisProp == null))
                    {
                        _aspectratioaxisProp = this._serializedProperty.FindPropertyRelative("AspectRatioAxis");
                    }
                    return _aspectratioaxisProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Length : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _rawProp;
            
            private UnityEditor.SerializedProperty _typeProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public float Raw
            {
                get
                {
                    return this.RawProp.floatValue;
                }
                set
                {
                    this.RawProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty RawProp
            {
                get
                {
                    if ((_rawProp == null))
                    {
                        _rawProp = this._serializedProperty.FindPropertyRelative("Raw");
                    }
                    return _rawProp;
                }
            }
            
            public Nova.LengthType Type
            {
                get
                {
                    return ((Nova.LengthType)(this.TypeProp.intValue));
                }
                set
                {
                    this.TypeProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty TypeProp
            {
                get
                {
                    if ((_typeProp == null))
                    {
                        _typeProp = this._serializedProperty.FindPropertyRelative("Type");
                    }
                    return _typeProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Length2 : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _Length _x;
            
            private UnityEditor.SerializedProperty _xProp;
            
            private _Length _y;
            
            private UnityEditor.SerializedProperty _yProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _Length X
            {
                get
                {
                    if ((_x == null))
                    {
                        _x = new _Length();
                        _x.SerializedProperty = this.XProp;
                    }
                    return _x;
                }
            }
            
            public UnityEditor.SerializedProperty XProp
            {
                get
                {
                    if ((_xProp == null))
                    {
                        _xProp = this._serializedProperty.FindPropertyRelative("X");
                    }
                    return _xProp;
                }
            }
            
            public _Length Y
            {
                get
                {
                    if ((_y == null))
                    {
                        _y = new _Length();
                        _y.SerializedProperty = this.YProp;
                    }
                    return _y;
                }
            }
            
            public UnityEditor.SerializedProperty YProp
            {
                get
                {
                    if ((_yProp == null))
                    {
                        _yProp = this._serializedProperty.FindPropertyRelative("Y");
                    }
                    return _yProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Length3 : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _Length _x;
            
            private UnityEditor.SerializedProperty _xProp;
            
            private _Length _y;
            
            private UnityEditor.SerializedProperty _yProp;
            
            private _Length _z;
            
            private UnityEditor.SerializedProperty _zProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _Length X
            {
                get
                {
                    if ((_x == null))
                    {
                        _x = new _Length();
                        _x.SerializedProperty = this.XProp;
                    }
                    return _x;
                }
            }
            
            public UnityEditor.SerializedProperty XProp
            {
                get
                {
                    if ((_xProp == null))
                    {
                        _xProp = this._serializedProperty.FindPropertyRelative("X");
                    }
                    return _xProp;
                }
            }
            
            public _Length Y
            {
                get
                {
                    if ((_y == null))
                    {
                        _y = new _Length();
                        _y.SerializedProperty = this.YProp;
                    }
                    return _y;
                }
            }
            
            public UnityEditor.SerializedProperty YProp
            {
                get
                {
                    if ((_yProp == null))
                    {
                        _yProp = this._serializedProperty.FindPropertyRelative("Y");
                    }
                    return _yProp;
                }
            }
            
            public _Length Z
            {
                get
                {
                    if ((_z == null))
                    {
                        _z = new _Length();
                        _z.SerializedProperty = this.ZProp;
                    }
                    return _z;
                }
            }
            
            public UnityEditor.SerializedProperty ZProp
            {
                get
                {
                    if ((_zProp == null))
                    {
                        _zProp = this._serializedProperty.FindPropertyRelative("Z");
                    }
                    return _zProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _LengthBounds : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _Length _left;
            
            private UnityEditor.SerializedProperty _leftProp;
            
            private _Length _right;
            
            private UnityEditor.SerializedProperty _rightProp;
            
            private _Length _bottom;
            
            private UnityEditor.SerializedProperty _bottomProp;
            
            private _Length _top;
            
            private UnityEditor.SerializedProperty _topProp;
            
            private _Length _front;
            
            private UnityEditor.SerializedProperty _frontProp;
            
            private _Length _back;
            
            private UnityEditor.SerializedProperty _backProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _Length Left
            {
                get
                {
                    if ((_left == null))
                    {
                        _left = new _Length();
                        _left.SerializedProperty = this.LeftProp;
                    }
                    return _left;
                }
            }
            
            public UnityEditor.SerializedProperty LeftProp
            {
                get
                {
                    if ((_leftProp == null))
                    {
                        _leftProp = this._serializedProperty.FindPropertyRelative("Left");
                    }
                    return _leftProp;
                }
            }
            
            public _Length Right
            {
                get
                {
                    if ((_right == null))
                    {
                        _right = new _Length();
                        _right.SerializedProperty = this.RightProp;
                    }
                    return _right;
                }
            }
            
            public UnityEditor.SerializedProperty RightProp
            {
                get
                {
                    if ((_rightProp == null))
                    {
                        _rightProp = this._serializedProperty.FindPropertyRelative("Right");
                    }
                    return _rightProp;
                }
            }
            
            public _Length Bottom
            {
                get
                {
                    if ((_bottom == null))
                    {
                        _bottom = new _Length();
                        _bottom.SerializedProperty = this.BottomProp;
                    }
                    return _bottom;
                }
            }
            
            public UnityEditor.SerializedProperty BottomProp
            {
                get
                {
                    if ((_bottomProp == null))
                    {
                        _bottomProp = this._serializedProperty.FindPropertyRelative("Bottom");
                    }
                    return _bottomProp;
                }
            }
            
            public _Length Top
            {
                get
                {
                    if ((_top == null))
                    {
                        _top = new _Length();
                        _top.SerializedProperty = this.TopProp;
                    }
                    return _top;
                }
            }
            
            public UnityEditor.SerializedProperty TopProp
            {
                get
                {
                    if ((_topProp == null))
                    {
                        _topProp = this._serializedProperty.FindPropertyRelative("Top");
                    }
                    return _topProp;
                }
            }
            
            public _Length Front
            {
                get
                {
                    if ((_front == null))
                    {
                        _front = new _Length();
                        _front.SerializedProperty = this.FrontProp;
                    }
                    return _front;
                }
            }
            
            public UnityEditor.SerializedProperty FrontProp
            {
                get
                {
                    if ((_frontProp == null))
                    {
                        _frontProp = this._serializedProperty.FindPropertyRelative("Front");
                    }
                    return _frontProp;
                }
            }
            
            public _Length Back
            {
                get
                {
                    if ((_back == null))
                    {
                        _back = new _Length();
                        _back.SerializedProperty = this.BackProp;
                    }
                    return _back;
                }
            }
            
            public UnityEditor.SerializedProperty BackProp
            {
                get
                {
                    if ((_backProp == null))
                    {
                        _backProp = this._serializedProperty.FindPropertyRelative("Back");
                    }
                    return _backProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _ListView : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _outofviewdistanceProp;
            
            private UnityEditor.SerializedProperty @__uiblockProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty listItemPrefabs
            {
                get
                {
                    return this._serializedProperty.FindPropertyRelative("listItemPrefabs");
                }
            }
            
            public float outOfViewDistance
            {
                get
                {
                    return this.outOfViewDistanceProp.floatValue;
                }
                set
                {
                    this.outOfViewDistanceProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty outOfViewDistanceProp
            {
                get
                {
                    if ((_outofviewdistanceProp == null))
                    {
                        _outofviewdistanceProp = this._serializedProperty.FindPropertyRelative("outOfViewDistance");
                    }
                    return _outofviewdistanceProp;
                }
            }
            
            public Nova.UIBlock _uiBlock
            {
                get
                {
                    return ((Nova.UIBlock)(this._uiBlockProp.objectReferenceValue));
                }
                set
                {
                    this._uiBlockProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty _uiBlockProp
            {
                get
                {
                    if ((@__uiblockProp == null))
                    {
                        @__uiblockProp = this._serializedProperty.FindPropertyRelative("_uiBlock");
                    }
                    return @__uiblockProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _MinMax : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _minProp;
            
            private UnityEditor.SerializedProperty _maxProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public float Min
            {
                get
                {
                    return this.MinProp.floatValue;
                }
                set
                {
                    this.MinProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty MinProp
            {
                get
                {
                    if ((_minProp == null))
                    {
                        _minProp = this._serializedProperty.FindPropertyRelative("Min");
                    }
                    return _minProp;
                }
            }
            
            public float Max
            {
                get
                {
                    return this.MaxProp.floatValue;
                }
                set
                {
                    this.MaxProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty MaxProp
            {
                get
                {
                    if ((_maxProp == null))
                    {
                        _maxProp = this._serializedProperty.FindPropertyRelative("Max");
                    }
                    return _maxProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _MinMax3 : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _MinMax _x;
            
            private UnityEditor.SerializedProperty _xProp;
            
            private _MinMax _y;
            
            private UnityEditor.SerializedProperty _yProp;
            
            private _MinMax _z;
            
            private UnityEditor.SerializedProperty _zProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _MinMax X
            {
                get
                {
                    if ((_x == null))
                    {
                        _x = new _MinMax();
                        _x.SerializedProperty = this.XProp;
                    }
                    return _x;
                }
            }
            
            public UnityEditor.SerializedProperty XProp
            {
                get
                {
                    if ((_xProp == null))
                    {
                        _xProp = this._serializedProperty.FindPropertyRelative("X");
                    }
                    return _xProp;
                }
            }
            
            public _MinMax Y
            {
                get
                {
                    if ((_y == null))
                    {
                        _y = new _MinMax();
                        _y.SerializedProperty = this.YProp;
                    }
                    return _y;
                }
            }
            
            public UnityEditor.SerializedProperty YProp
            {
                get
                {
                    if ((_yProp == null))
                    {
                        _yProp = this._serializedProperty.FindPropertyRelative("Y");
                    }
                    return _yProp;
                }
            }
            
            public _MinMax Z
            {
                get
                {
                    if ((_z == null))
                    {
                        _z = new _MinMax();
                        _z.SerializedProperty = this.ZProp;
                    }
                    return _z;
                }
            }
            
            public UnityEditor.SerializedProperty ZProp
            {
                get
                {
                    if ((_zProp == null))
                    {
                        _zProp = this._serializedProperty.FindPropertyRelative("Z");
                    }
                    return _zProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _MinMaxBounds : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _MinMax _left;
            
            private UnityEditor.SerializedProperty _leftProp;
            
            private _MinMax _right;
            
            private UnityEditor.SerializedProperty _rightProp;
            
            private _MinMax _bottom;
            
            private UnityEditor.SerializedProperty _bottomProp;
            
            private _MinMax _top;
            
            private UnityEditor.SerializedProperty _topProp;
            
            private _MinMax _front;
            
            private UnityEditor.SerializedProperty _frontProp;
            
            private _MinMax _back;
            
            private UnityEditor.SerializedProperty _backProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _MinMax Left
            {
                get
                {
                    if ((_left == null))
                    {
                        _left = new _MinMax();
                        _left.SerializedProperty = this.LeftProp;
                    }
                    return _left;
                }
            }
            
            public UnityEditor.SerializedProperty LeftProp
            {
                get
                {
                    if ((_leftProp == null))
                    {
                        _leftProp = this._serializedProperty.FindPropertyRelative("Left");
                    }
                    return _leftProp;
                }
            }
            
            public _MinMax Right
            {
                get
                {
                    if ((_right == null))
                    {
                        _right = new _MinMax();
                        _right.SerializedProperty = this.RightProp;
                    }
                    return _right;
                }
            }
            
            public UnityEditor.SerializedProperty RightProp
            {
                get
                {
                    if ((_rightProp == null))
                    {
                        _rightProp = this._serializedProperty.FindPropertyRelative("Right");
                    }
                    return _rightProp;
                }
            }
            
            public _MinMax Bottom
            {
                get
                {
                    if ((_bottom == null))
                    {
                        _bottom = new _MinMax();
                        _bottom.SerializedProperty = this.BottomProp;
                    }
                    return _bottom;
                }
            }
            
            public UnityEditor.SerializedProperty BottomProp
            {
                get
                {
                    if ((_bottomProp == null))
                    {
                        _bottomProp = this._serializedProperty.FindPropertyRelative("Bottom");
                    }
                    return _bottomProp;
                }
            }
            
            public _MinMax Top
            {
                get
                {
                    if ((_top == null))
                    {
                        _top = new _MinMax();
                        _top.SerializedProperty = this.TopProp;
                    }
                    return _top;
                }
            }
            
            public UnityEditor.SerializedProperty TopProp
            {
                get
                {
                    if ((_topProp == null))
                    {
                        _topProp = this._serializedProperty.FindPropertyRelative("Top");
                    }
                    return _topProp;
                }
            }
            
            public _MinMax Front
            {
                get
                {
                    if ((_front == null))
                    {
                        _front = new _MinMax();
                        _front.SerializedProperty = this.FrontProp;
                    }
                    return _front;
                }
            }
            
            public UnityEditor.SerializedProperty FrontProp
            {
                get
                {
                    if ((_frontProp == null))
                    {
                        _frontProp = this._serializedProperty.FindPropertyRelative("Front");
                    }
                    return _frontProp;
                }
            }
            
            public _MinMax Back
            {
                get
                {
                    if ((_back == null))
                    {
                        _back = new _MinMax();
                        _back.SerializedProperty = this.BackProp;
                    }
                    return _back;
                }
            }
            
            public UnityEditor.SerializedProperty BackProp
            {
                get
                {
                    if ((_backProp == null))
                    {
                        _backProp = this._serializedProperty.FindPropertyRelative("Back");
                    }
                    return _backProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _NavLink : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _typeProp;
            
            private UnityEditor.SerializedProperty _fallbackProp;
            
            private UnityEditor.SerializedProperty _targetProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public Nova.NavLinkType Type
            {
                get
                {
                    return ((Nova.NavLinkType)(this.TypeProp.intValue));
                }
                set
                {
                    this.TypeProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty TypeProp
            {
                get
                {
                    if ((_typeProp == null))
                    {
                        _typeProp = this._serializedProperty.FindPropertyRelative("Type");
                    }
                    return _typeProp;
                }
            }
            
            public Nova.NavLinkFallback Fallback
            {
                get
                {
                    return ((Nova.NavLinkFallback)(this.FallbackProp.intValue));
                }
                set
                {
                    this.FallbackProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty FallbackProp
            {
                get
                {
                    if ((_fallbackProp == null))
                    {
                        _fallbackProp = this._serializedProperty.FindPropertyRelative("Fallback");
                    }
                    return _fallbackProp;
                }
            }
            
            public Nova.GestureRecognizer Target
            {
                get
                {
                    return ((Nova.GestureRecognizer)(this.TargetProp.objectReferenceValue));
                }
                set
                {
                    this.TargetProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty TargetProp
            {
                get
                {
                    if ((_targetProp == null))
                    {
                        _targetProp = this._serializedProperty.FindPropertyRelative("Target");
                    }
                    return _targetProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _NavNode : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _NavLink _left;
            
            private UnityEditor.SerializedProperty _leftProp;
            
            private _NavLink _right;
            
            private UnityEditor.SerializedProperty _rightProp;
            
            private _NavLink _down;
            
            private UnityEditor.SerializedProperty _downProp;
            
            private _NavLink _up;
            
            private UnityEditor.SerializedProperty _upProp;
            
            private _NavLink _forward;
            
            private UnityEditor.SerializedProperty _forwardProp;
            
            private _NavLink _back;
            
            private UnityEditor.SerializedProperty _backProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _NavLink Left
            {
                get
                {
                    if ((_left == null))
                    {
                        _left = new _NavLink();
                        _left.SerializedProperty = this.LeftProp;
                    }
                    return _left;
                }
            }
            
            public UnityEditor.SerializedProperty LeftProp
            {
                get
                {
                    if ((_leftProp == null))
                    {
                        _leftProp = this._serializedProperty.FindPropertyRelative("Left");
                    }
                    return _leftProp;
                }
            }
            
            public _NavLink Right
            {
                get
                {
                    if ((_right == null))
                    {
                        _right = new _NavLink();
                        _right.SerializedProperty = this.RightProp;
                    }
                    return _right;
                }
            }
            
            public UnityEditor.SerializedProperty RightProp
            {
                get
                {
                    if ((_rightProp == null))
                    {
                        _rightProp = this._serializedProperty.FindPropertyRelative("Right");
                    }
                    return _rightProp;
                }
            }
            
            public _NavLink Down
            {
                get
                {
                    if ((_down == null))
                    {
                        _down = new _NavLink();
                        _down.SerializedProperty = this.DownProp;
                    }
                    return _down;
                }
            }
            
            public UnityEditor.SerializedProperty DownProp
            {
                get
                {
                    if ((_downProp == null))
                    {
                        _downProp = this._serializedProperty.FindPropertyRelative("Down");
                    }
                    return _downProp;
                }
            }
            
            public _NavLink Up
            {
                get
                {
                    if ((_up == null))
                    {
                        _up = new _NavLink();
                        _up.SerializedProperty = this.UpProp;
                    }
                    return _up;
                }
            }
            
            public UnityEditor.SerializedProperty UpProp
            {
                get
                {
                    if ((_upProp == null))
                    {
                        _upProp = this._serializedProperty.FindPropertyRelative("Up");
                    }
                    return _upProp;
                }
            }
            
            public _NavLink Forward
            {
                get
                {
                    if ((_forward == null))
                    {
                        _forward = new _NavLink();
                        _forward.SerializedProperty = this.ForwardProp;
                    }
                    return _forward;
                }
            }
            
            public UnityEditor.SerializedProperty ForwardProp
            {
                get
                {
                    if ((_forwardProp == null))
                    {
                        _forwardProp = this._serializedProperty.FindPropertyRelative("Forward");
                    }
                    return _forwardProp;
                }
            }
            
            public _NavLink Back
            {
                get
                {
                    if ((_back == null))
                    {
                        _back = new _NavLink();
                        _back.SerializedProperty = this.BackProp;
                    }
                    return _back;
                }
            }
            
            public UnityEditor.SerializedProperty BackProp
            {
                get
                {
                    if ((_backProp == null))
                    {
                        _backProp = this._serializedProperty.FindPropertyRelative("Back");
                    }
                    return _backProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _NovaSettings : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _SettingsConfig _settings;
            
            private UnityEditor.SerializedProperty _settingsProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _SettingsConfig settings
            {
                get
                {
                    if ((_settings == null))
                    {
                        _settings = new _SettingsConfig();
                        _settings.SerializedProperty = this.settingsProp;
                    }
                    return _settings;
                }
            }
            
            public UnityEditor.SerializedProperty settingsProp
            {
                get
                {
                    if ((_settingsProp == null))
                    {
                        _settingsProp = this._serializedProperty.FindPropertyRelative("settings");
                    }
                    return _settingsProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _RadialFill : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _Length2 _center;
            
            private UnityEditor.SerializedProperty _centerProp;
            
            private UnityEditor.SerializedProperty _rotationProp;
            
            private UnityEditor.SerializedProperty _fillangleProp;
            
            private UnityEditor.SerializedProperty _enabledProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _Length2 Center
            {
                get
                {
                    if ((_center == null))
                    {
                        _center = new _Length2();
                        _center.SerializedProperty = this.CenterProp;
                    }
                    return _center;
                }
            }
            
            public UnityEditor.SerializedProperty CenterProp
            {
                get
                {
                    if ((_centerProp == null))
                    {
                        _centerProp = this._serializedProperty.FindPropertyRelative("Center");
                    }
                    return _centerProp;
                }
            }
            
            public float Rotation
            {
                get
                {
                    return this.RotationProp.floatValue;
                }
                set
                {
                    this.RotationProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty RotationProp
            {
                get
                {
                    if ((_rotationProp == null))
                    {
                        _rotationProp = this._serializedProperty.FindPropertyRelative("Rotation");
                    }
                    return _rotationProp;
                }
            }
            
            public float FillAngle
            {
                get
                {
                    return this.FillAngleProp.floatValue;
                }
                set
                {
                    this.FillAngleProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty FillAngleProp
            {
                get
                {
                    if ((_fillangleProp == null))
                    {
                        _fillangleProp = this._serializedProperty.FindPropertyRelative("FillAngle");
                    }
                    return _fillangleProp;
                }
            }
            
            public bool Enabled
            {
                get
                {
                    return this.EnabledProp.boolValue;
                }
                set
                {
                    this.EnabledProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty EnabledProp
            {
                get
                {
                    if ((_enabledProp == null))
                    {
                        _enabledProp = this._serializedProperty.FindPropertyRelative("Enabled");
                    }
                    return _enabledProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _RadialGradient : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _colorProp;
            
            private _Length2 _center;
            
            private UnityEditor.SerializedProperty _centerProp;
            
            private _Length2 _radius;
            
            private UnityEditor.SerializedProperty _radiusProp;
            
            private UnityEditor.SerializedProperty _rotationProp;
            
            private UnityEditor.SerializedProperty _enabledProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Color Color
            {
                get
                {
                    return this.ColorProp.colorValue;
                }
                set
                {
                    this.ColorProp.colorValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ColorProp
            {
                get
                {
                    if ((_colorProp == null))
                    {
                        _colorProp = this._serializedProperty.FindPropertyRelative("Color");
                    }
                    return _colorProp;
                }
            }
            
            public _Length2 Center
            {
                get
                {
                    if ((_center == null))
                    {
                        _center = new _Length2();
                        _center.SerializedProperty = this.CenterProp;
                    }
                    return _center;
                }
            }
            
            public UnityEditor.SerializedProperty CenterProp
            {
                get
                {
                    if ((_centerProp == null))
                    {
                        _centerProp = this._serializedProperty.FindPropertyRelative("Center");
                    }
                    return _centerProp;
                }
            }
            
            public _Length2 Radius
            {
                get
                {
                    if ((_radius == null))
                    {
                        _radius = new _Length2();
                        _radius.SerializedProperty = this.RadiusProp;
                    }
                    return _radius;
                }
            }
            
            public UnityEditor.SerializedProperty RadiusProp
            {
                get
                {
                    if ((_radiusProp == null))
                    {
                        _radiusProp = this._serializedProperty.FindPropertyRelative("Radius");
                    }
                    return _radiusProp;
                }
            }
            
            public float Rotation
            {
                get
                {
                    return this.RotationProp.floatValue;
                }
                set
                {
                    this.RotationProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty RotationProp
            {
                get
                {
                    if ((_rotationProp == null))
                    {
                        _rotationProp = this._serializedProperty.FindPropertyRelative("Rotation");
                    }
                    return _rotationProp;
                }
            }
            
            public bool Enabled
            {
                get
                {
                    return this.EnabledProp.boolValue;
                }
                set
                {
                    this.EnabledProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty EnabledProp
            {
                get
                {
                    if ((_enabledProp == null))
                    {
                        _enabledProp = this._serializedProperty.FindPropertyRelative("Enabled");
                    }
                    return _enabledProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _ScreenSpace : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _targetcameraProp;
            
            private UnityEditor.SerializedProperty _referenceresolutionProp;
            
            private UnityEditor.SerializedProperty _fillmodeProp;
            
            private UnityEditor.SerializedProperty _planedistanceProp;
            
            private UnityEditor.SerializedProperty _haveconfiguredsortgroupProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Camera targetCamera
            {
                get
                {
                    return ((UnityEngine.Camera)(this.targetCameraProp.objectReferenceValue));
                }
                set
                {
                    this.targetCameraProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty targetCameraProp
            {
                get
                {
                    if ((_targetcameraProp == null))
                    {
                        _targetcameraProp = this._serializedProperty.FindPropertyRelative("targetCamera");
                    }
                    return _targetcameraProp;
                }
            }
            
            public UnityEngine.Vector2 referenceResolution
            {
                get
                {
                    return this.referenceResolutionProp.vector2Value;
                }
                set
                {
                    this.referenceResolutionProp.vector2Value = value;
                }
            }
            
            public UnityEditor.SerializedProperty referenceResolutionProp
            {
                get
                {
                    if ((_referenceresolutionProp == null))
                    {
                        _referenceresolutionProp = this._serializedProperty.FindPropertyRelative("referenceResolution");
                    }
                    return _referenceresolutionProp;
                }
            }
            
            public Nova.ScreenSpace.FillMode fillMode
            {
                get
                {
                    return ((Nova.ScreenSpace.FillMode)(this.fillModeProp.intValue));
                }
                set
                {
                    this.fillModeProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty fillModeProp
            {
                get
                {
                    if ((_fillmodeProp == null))
                    {
                        _fillmodeProp = this._serializedProperty.FindPropertyRelative("fillMode");
                    }
                    return _fillmodeProp;
                }
            }
            
            public float planeDistance
            {
                get
                {
                    return this.planeDistanceProp.floatValue;
                }
                set
                {
                    this.planeDistanceProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty planeDistanceProp
            {
                get
                {
                    if ((_planedistanceProp == null))
                    {
                        _planedistanceProp = this._serializedProperty.FindPropertyRelative("planeDistance");
                    }
                    return _planedistanceProp;
                }
            }
            
            public bool haveConfiguredSortGroup
            {
                get
                {
                    return this.haveConfiguredSortGroupProp.boolValue;
                }
                set
                {
                    this.haveConfiguredSortGroupProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty haveConfiguredSortGroupProp
            {
                get
                {
                    if ((_haveconfiguredsortgroupProp == null))
                    {
                        _haveconfiguredsortgroupProp = this._serializedProperty.FindPropertyRelative("haveConfiguredSortGroup");
                    }
                    return _haveconfiguredsortgroupProp;
                }
            }
            
            public UnityEditor.SerializedProperty additionalCameras
            {
                get
                {
                    return this._serializedProperty.FindPropertyRelative("additionalCameras");
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Scroller : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _overscrolleffectProp;
            
            private UnityEditor.SerializedProperty _vectorscrollmultiplierProp;
            
            private UnityEditor.SerializedProperty _dragscrollingProp;
            
            private UnityEditor.SerializedProperty _vectorscrollingProp;
            
            private UnityEditor.SerializedProperty _scrollbarvisualProp;
            
            private UnityEditor.SerializedProperty _draggablescrollbarProp;
            
            private UnityEditor.SerializedProperty _obstructdragsProp;
            
            private UnityEditor.SerializedProperty _dragthresholdProp;
            
            private UnityEditor.SerializedProperty _lowaccuracydragthresholdProp;
            
            private UnityEditor.SerializedProperty _clickbehaviorProp;
            
            private UnityEditor.SerializedProperty _onselectProp;
            
            private UnityEditor.SerializedProperty _autoselectProp;
            
            private _NavNode _navigation;
            
            private UnityEditor.SerializedProperty _navigationProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public Nova.OverscrollEffect OverscrollEffect
            {
                get
                {
                    return ((Nova.OverscrollEffect)(this.OverscrollEffectProp.intValue));
                }
                set
                {
                    this.OverscrollEffectProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty OverscrollEffectProp
            {
                get
                {
                    if ((_overscrolleffectProp == null))
                    {
                        _overscrolleffectProp = this._serializedProperty.FindPropertyRelative("OverscrollEffect");
                    }
                    return _overscrolleffectProp;
                }
            }
            
            public float VectorScrollMultiplier
            {
                get
                {
                    return this.VectorScrollMultiplierProp.floatValue;
                }
                set
                {
                    this.VectorScrollMultiplierProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty VectorScrollMultiplierProp
            {
                get
                {
                    if ((_vectorscrollmultiplierProp == null))
                    {
                        _vectorscrollmultiplierProp = this._serializedProperty.FindPropertyRelative("VectorScrollMultiplier");
                    }
                    return _vectorscrollmultiplierProp;
                }
            }
            
            public bool dragScrolling
            {
                get
                {
                    return this.dragScrollingProp.boolValue;
                }
                set
                {
                    this.dragScrollingProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty dragScrollingProp
            {
                get
                {
                    if ((_dragscrollingProp == null))
                    {
                        _dragscrollingProp = this._serializedProperty.FindPropertyRelative("dragScrolling");
                    }
                    return _dragscrollingProp;
                }
            }
            
            public bool vectorScrolling
            {
                get
                {
                    return this.vectorScrollingProp.boolValue;
                }
                set
                {
                    this.vectorScrollingProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty vectorScrollingProp
            {
                get
                {
                    if ((_vectorscrollingProp == null))
                    {
                        _vectorscrollingProp = this._serializedProperty.FindPropertyRelative("vectorScrolling");
                    }
                    return _vectorscrollingProp;
                }
            }
            
            public Nova.UIBlock scrollbarVisual
            {
                get
                {
                    return ((Nova.UIBlock)(this.scrollbarVisualProp.objectReferenceValue));
                }
                set
                {
                    this.scrollbarVisualProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty scrollbarVisualProp
            {
                get
                {
                    if ((_scrollbarvisualProp == null))
                    {
                        _scrollbarvisualProp = this._serializedProperty.FindPropertyRelative("scrollbarVisual");
                    }
                    return _scrollbarvisualProp;
                }
            }
            
            public bool draggableScrollbar
            {
                get
                {
                    return this.draggableScrollbarProp.boolValue;
                }
                set
                {
                    this.draggableScrollbarProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty draggableScrollbarProp
            {
                get
                {
                    if ((_draggablescrollbarProp == null))
                    {
                        _draggablescrollbarProp = this._serializedProperty.FindPropertyRelative("draggableScrollbar");
                    }
                    return _draggablescrollbarProp;
                }
            }
            
            public bool ObstructDrags
            {
                get
                {
                    return this.ObstructDragsProp.boolValue;
                }
                set
                {
                    this.ObstructDragsProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ObstructDragsProp
            {
                get
                {
                    if ((_obstructdragsProp == null))
                    {
                        _obstructdragsProp = this._serializedProperty.FindPropertyRelative("ObstructDrags");
                    }
                    return _obstructdragsProp;
                }
            }
            
            public float DragThreshold
            {
                get
                {
                    return this.DragThresholdProp.floatValue;
                }
                set
                {
                    this.DragThresholdProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty DragThresholdProp
            {
                get
                {
                    if ((_dragthresholdProp == null))
                    {
                        _dragthresholdProp = this._serializedProperty.FindPropertyRelative("DragThreshold");
                    }
                    return _dragthresholdProp;
                }
            }
            
            public float LowAccuracyDragThreshold
            {
                get
                {
                    return this.LowAccuracyDragThresholdProp.floatValue;
                }
                set
                {
                    this.LowAccuracyDragThresholdProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty LowAccuracyDragThresholdProp
            {
                get
                {
                    if ((_lowaccuracydragthresholdProp == null))
                    {
                        _lowaccuracydragthresholdProp = this._serializedProperty.FindPropertyRelative("LowAccuracyDragThreshold");
                    }
                    return _lowaccuracydragthresholdProp;
                }
            }
            
            public Nova.ClickBehavior ClickBehavior
            {
                get
                {
                    return ((Nova.ClickBehavior)(this.ClickBehaviorProp.intValue));
                }
                set
                {
                    this.ClickBehaviorProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty ClickBehaviorProp
            {
                get
                {
                    if ((_clickbehaviorProp == null))
                    {
                        _clickbehaviorProp = this._serializedProperty.FindPropertyRelative("ClickBehavior");
                    }
                    return _clickbehaviorProp;
                }
            }
            
            public Nova.SelectBehavior onSelect
            {
                get
                {
                    return ((Nova.SelectBehavior)(this.onSelectProp.intValue));
                }
                set
                {
                    this.onSelectProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty onSelectProp
            {
                get
                {
                    if ((_onselectProp == null))
                    {
                        _onselectProp = this._serializedProperty.FindPropertyRelative("onSelect");
                    }
                    return _onselectProp;
                }
            }
            
            public bool autoSelect
            {
                get
                {
                    return this.autoSelectProp.boolValue;
                }
                set
                {
                    this.autoSelectProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty autoSelectProp
            {
                get
                {
                    if ((_autoselectProp == null))
                    {
                        _autoselectProp = this._serializedProperty.FindPropertyRelative("autoSelect");
                    }
                    return _autoselectProp;
                }
            }
            
            public _NavNode Navigation
            {
                get
                {
                    if ((_navigation == null))
                    {
                        _navigation = new _NavNode();
                        _navigation.SerializedProperty = this.NavigationProp;
                    }
                    return _navigation;
                }
            }
            
            public UnityEditor.SerializedProperty NavigationProp
            {
                get
                {
                    if ((_navigationProp == null))
                    {
                        _navigationProp = this._serializedProperty.FindPropertyRelative("Navigation");
                    }
                    return _navigationProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _SettingsConfig : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _logflagsProp;
            
            private UnityEditor.SerializedProperty _packedimagesenabledProp;
            
            private UnityEditor.SerializedProperty _packedimagecopymodeProp;
            
            private UnityEditor.SerializedProperty _supersampletextProp;
            
            private UnityEditor.SerializedProperty _edgesoftenwidthProp;
            
            private UnityEditor.SerializedProperty _uiblock3dcornerdivisionsProp;
            
            private UnityEditor.SerializedProperty _uiblock3dedgedivisionsProp;
            
            private UnityEditor.SerializedProperty _uiblock2dlightingmodelsProp;
            
            private UnityEditor.SerializedProperty _textblocklightingmodelsProp;
            
            private UnityEditor.SerializedProperty _uiblock3dlightingmodelsProp;
            
            private UnityEditor.SerializedProperty _clickframedeltathresholdProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public Nova.LogFlags LogFlags
            {
                get
                {
                    return ((Nova.LogFlags)(this.LogFlagsProp.intValue));
                }
                set
                {
                    this.LogFlagsProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty LogFlagsProp
            {
                get
                {
                    if ((_logflagsProp == null))
                    {
                        _logflagsProp = this._serializedProperty.FindPropertyRelative("LogFlags");
                    }
                    return _logflagsProp;
                }
            }
            
            public bool PackedImagesEnabled
            {
                get
                {
                    return this.PackedImagesEnabledProp.boolValue;
                }
                set
                {
                    this.PackedImagesEnabledProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty PackedImagesEnabledProp
            {
                get
                {
                    if ((_packedimagesenabledProp == null))
                    {
                        _packedimagesenabledProp = this._serializedProperty.FindPropertyRelative("PackedImagesEnabled");
                    }
                    return _packedimagesenabledProp;
                }
            }
            
            public Nova.PackedImageCopyMode PackedImageCopyMode
            {
                get
                {
                    return ((Nova.PackedImageCopyMode)(this.PackedImageCopyModeProp.intValue));
                }
                set
                {
                    this.PackedImageCopyModeProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty PackedImageCopyModeProp
            {
                get
                {
                    if ((_packedimagecopymodeProp == null))
                    {
                        _packedimagecopymodeProp = this._serializedProperty.FindPropertyRelative("PackedImageCopyMode");
                    }
                    return _packedimagecopymodeProp;
                }
            }
            
            public bool SuperSampleText
            {
                get
                {
                    return this.SuperSampleTextProp.boolValue;
                }
                set
                {
                    this.SuperSampleTextProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty SuperSampleTextProp
            {
                get
                {
                    if ((_supersampletextProp == null))
                    {
                        _supersampletextProp = this._serializedProperty.FindPropertyRelative("SuperSampleText");
                    }
                    return _supersampletextProp;
                }
            }
            
            public float EdgeSoftenWidth
            {
                get
                {
                    return this.EdgeSoftenWidthProp.floatValue;
                }
                set
                {
                    this.EdgeSoftenWidthProp.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty EdgeSoftenWidthProp
            {
                get
                {
                    if ((_edgesoftenwidthProp == null))
                    {
                        _edgesoftenwidthProp = this._serializedProperty.FindPropertyRelative("EdgeSoftenWidth");
                    }
                    return _edgesoftenwidthProp;
                }
            }
            
            public int UIBlock3DCornerDivisions
            {
                get
                {
                    return this.UIBlock3DCornerDivisionsProp.intValue;
                }
                set
                {
                    this.UIBlock3DCornerDivisionsProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty UIBlock3DCornerDivisionsProp
            {
                get
                {
                    if ((_uiblock3dcornerdivisionsProp == null))
                    {
                        _uiblock3dcornerdivisionsProp = this._serializedProperty.FindPropertyRelative("UIBlock3DCornerDivisions");
                    }
                    return _uiblock3dcornerdivisionsProp;
                }
            }
            
            public int UIBlock3DEdgeDivisions
            {
                get
                {
                    return this.UIBlock3DEdgeDivisionsProp.intValue;
                }
                set
                {
                    this.UIBlock3DEdgeDivisionsProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty UIBlock3DEdgeDivisionsProp
            {
                get
                {
                    if ((_uiblock3dedgedivisionsProp == null))
                    {
                        _uiblock3dedgedivisionsProp = this._serializedProperty.FindPropertyRelative("UIBlock3DEdgeDivisions");
                    }
                    return _uiblock3dedgedivisionsProp;
                }
            }
            
            public Nova.LightingModelBuildFlag UIBlock2DLightingModels
            {
                get
                {
                    return ((Nova.LightingModelBuildFlag)(this.UIBlock2DLightingModelsProp.intValue));
                }
                set
                {
                    this.UIBlock2DLightingModelsProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty UIBlock2DLightingModelsProp
            {
                get
                {
                    if ((_uiblock2dlightingmodelsProp == null))
                    {
                        _uiblock2dlightingmodelsProp = this._serializedProperty.FindPropertyRelative("UIBlock2DLightingModels");
                    }
                    return _uiblock2dlightingmodelsProp;
                }
            }
            
            public Nova.LightingModelBuildFlag TextBlockLightingModels
            {
                get
                {
                    return ((Nova.LightingModelBuildFlag)(this.TextBlockLightingModelsProp.intValue));
                }
                set
                {
                    this.TextBlockLightingModelsProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty TextBlockLightingModelsProp
            {
                get
                {
                    if ((_textblocklightingmodelsProp == null))
                    {
                        _textblocklightingmodelsProp = this._serializedProperty.FindPropertyRelative("TextBlockLightingModels");
                    }
                    return _textblocklightingmodelsProp;
                }
            }
            
            public Nova.LightingModelBuildFlag UIBlock3DLightingModels
            {
                get
                {
                    return ((Nova.LightingModelBuildFlag)(this.UIBlock3DLightingModelsProp.intValue));
                }
                set
                {
                    this.UIBlock3DLightingModelsProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty UIBlock3DLightingModelsProp
            {
                get
                {
                    if ((_uiblock3dlightingmodelsProp == null))
                    {
                        _uiblock3dlightingmodelsProp = this._serializedProperty.FindPropertyRelative("UIBlock3DLightingModels");
                    }
                    return _uiblock3dlightingmodelsProp;
                }
            }
            
            public int ClickFrameDeltaThreshold
            {
                get
                {
                    return this.ClickFrameDeltaThresholdProp.intValue;
                }
                set
                {
                    this.ClickFrameDeltaThresholdProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ClickFrameDeltaThresholdProp
            {
                get
                {
                    if ((_clickframedeltathresholdProp == null))
                    {
                        _clickframedeltathresholdProp = this._serializedProperty.FindPropertyRelative("ClickFrameDeltaThreshold");
                    }
                    return _clickframedeltathresholdProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Shadow : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _colorProp;
            
            private _Length _width;
            
            private UnityEditor.SerializedProperty _widthProp;
            
            private _Length _blur;
            
            private UnityEditor.SerializedProperty _blurProp;
            
            private _Length2 _offset;
            
            private UnityEditor.SerializedProperty _offsetProp;
            
            private UnityEditor.SerializedProperty _enabledProp;
            
            private UnityEditor.SerializedProperty _directionProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Color Color
            {
                get
                {
                    return this.ColorProp.colorValue;
                }
                set
                {
                    this.ColorProp.colorValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ColorProp
            {
                get
                {
                    if ((_colorProp == null))
                    {
                        _colorProp = this._serializedProperty.FindPropertyRelative("Color");
                    }
                    return _colorProp;
                }
            }
            
            public _Length Width
            {
                get
                {
                    if ((_width == null))
                    {
                        _width = new _Length();
                        _width.SerializedProperty = this.WidthProp;
                    }
                    return _width;
                }
            }
            
            public UnityEditor.SerializedProperty WidthProp
            {
                get
                {
                    if ((_widthProp == null))
                    {
                        _widthProp = this._serializedProperty.FindPropertyRelative("Width");
                    }
                    return _widthProp;
                }
            }
            
            public _Length Blur
            {
                get
                {
                    if ((_blur == null))
                    {
                        _blur = new _Length();
                        _blur.SerializedProperty = this.BlurProp;
                    }
                    return _blur;
                }
            }
            
            public UnityEditor.SerializedProperty BlurProp
            {
                get
                {
                    if ((_blurProp == null))
                    {
                        _blurProp = this._serializedProperty.FindPropertyRelative("Blur");
                    }
                    return _blurProp;
                }
            }
            
            public _Length2 Offset
            {
                get
                {
                    if ((_offset == null))
                    {
                        _offset = new _Length2();
                        _offset.SerializedProperty = this.OffsetProp;
                    }
                    return _offset;
                }
            }
            
            public UnityEditor.SerializedProperty OffsetProp
            {
                get
                {
                    if ((_offsetProp == null))
                    {
                        _offsetProp = this._serializedProperty.FindPropertyRelative("Offset");
                    }
                    return _offsetProp;
                }
            }
            
            public bool Enabled
            {
                get
                {
                    return this.EnabledProp.boolValue;
                }
                set
                {
                    this.EnabledProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty EnabledProp
            {
                get
                {
                    if ((_enabledProp == null))
                    {
                        _enabledProp = this._serializedProperty.FindPropertyRelative("Enabled");
                    }
                    return _enabledProp;
                }
            }
            
            public Nova.ShadowDirection Direction
            {
                get
                {
                    return ((Nova.ShadowDirection)(this.DirectionProp.intValue));
                }
                set
                {
                    this.DirectionProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty DirectionProp
            {
                get
                {
                    if ((_directionProp == null))
                    {
                        _directionProp = this._serializedProperty.FindPropertyRelative("Direction");
                    }
                    return _directionProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _SortGroup : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _SortGroupInfo _info;
            
            private UnityEditor.SerializedProperty _infoProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _SortGroupInfo info
            {
                get
                {
                    if ((_info == null))
                    {
                        _info = new _SortGroupInfo();
                        _info.SerializedProperty = this.infoProp;
                    }
                    return _info;
                }
            }
            
            public UnityEditor.SerializedProperty infoProp
            {
                get
                {
                    if ((_infoProp == null))
                    {
                        _infoProp = this._serializedProperty.FindPropertyRelative("info");
                    }
                    return _infoProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _SortGroupInfo : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _sortingorderProp;
            
            private UnityEditor.SerializedProperty _renderqueueProp;
            
            private UnityEditor.SerializedProperty _renderoveropaquegeometryProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public int SortingOrder
            {
                get
                {
                    return this.SortingOrderProp.intValue;
                }
                set
                {
                    this.SortingOrderProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty SortingOrderProp
            {
                get
                {
                    if ((_sortingorderProp == null))
                    {
                        _sortingorderProp = this._serializedProperty.FindPropertyRelative("SortingOrder");
                    }
                    return _sortingorderProp;
                }
            }
            
            public int RenderQueue
            {
                get
                {
                    return this.RenderQueueProp.intValue;
                }
                set
                {
                    this.RenderQueueProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty RenderQueueProp
            {
                get
                {
                    if ((_renderqueueProp == null))
                    {
                        _renderqueueProp = this._serializedProperty.FindPropertyRelative("RenderQueue");
                    }
                    return _renderqueueProp;
                }
            }
            
            public bool RenderOverOpaqueGeometry
            {
                get
                {
                    return this.RenderOverOpaqueGeometryProp.boolValue;
                }
                set
                {
                    this.RenderOverOpaqueGeometryProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty RenderOverOpaqueGeometryProp
            {
                get
                {
                    if ((_renderoveropaquegeometryProp == null))
                    {
                        _renderoveropaquegeometryProp = this._serializedProperty.FindPropertyRelative("RenderOverOpaqueGeometry");
                    }
                    return _renderoveropaquegeometryProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _SpacingTool : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _m_targetProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_Targets
            {
                get
                {
                    return this._serializedProperty.FindPropertyRelative("m_Targets");
                }
            }
            
            public UnityEngine.Object m_Target
            {
                get
                {
                    return ((UnityEngine.Object)(this.m_TargetProp.objectReferenceValue));
                }
                set
                {
                    this.m_TargetProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_TargetProp
            {
                get
                {
                    if ((_m_targetProp == null))
                    {
                        _m_targetProp = this._serializedProperty.FindPropertyRelative("m_Target");
                    }
                    return _m_targetProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _Surface : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _specularcolorProp;
            
            private UnityEditor.SerializedProperty _param1Prop;
            
            private UnityEditor.SerializedProperty _param2Prop;
            
            private UnityEditor.SerializedProperty _lightingmodelProp;
            
            private UnityEditor.SerializedProperty _shadowcastingmodeProp;
            
            private UnityEditor.SerializedProperty _receiveshadowsProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Color specularColor
            {
                get
                {
                    return this.specularColorProp.colorValue;
                }
                set
                {
                    this.specularColorProp.colorValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty specularColorProp
            {
                get
                {
                    if ((_specularcolorProp == null))
                    {
                        _specularcolorProp = this._serializedProperty.FindPropertyRelative("specularColor");
                    }
                    return _specularcolorProp;
                }
            }
            
            public float param1
            {
                get
                {
                    return this.param1Prop.floatValue;
                }
                set
                {
                    this.param1Prop.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty param1Prop
            {
                get
                {
                    if ((_param1Prop == null))
                    {
                        _param1Prop = this._serializedProperty.FindPropertyRelative("param1");
                    }
                    return _param1Prop;
                }
            }
            
            public float param2
            {
                get
                {
                    return this.param2Prop.floatValue;
                }
                set
                {
                    this.param2Prop.floatValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty param2Prop
            {
                get
                {
                    if ((_param2Prop == null))
                    {
                        _param2Prop = this._serializedProperty.FindPropertyRelative("param2");
                    }
                    return _param2Prop;
                }
            }
            
            public Nova.LightingModel LightingModel
            {
                get
                {
                    return ((Nova.LightingModel)(this.LightingModelProp.intValue));
                }
                set
                {
                    this.LightingModelProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty LightingModelProp
            {
                get
                {
                    if ((_lightingmodelProp == null))
                    {
                        _lightingmodelProp = this._serializedProperty.FindPropertyRelative("LightingModel");
                    }
                    return _lightingmodelProp;
                }
            }
            
            public UnityEngine.Rendering.ShadowCastingMode ShadowCastingMode
            {
                get
                {
                    return ((UnityEngine.Rendering.ShadowCastingMode)(this.ShadowCastingModeProp.intValue));
                }
                set
                {
                    this.ShadowCastingModeProp.intValue = ((int)(value));
                }
            }
            
            public UnityEditor.SerializedProperty ShadowCastingModeProp
            {
                get
                {
                    if ((_shadowcastingmodeProp == null))
                    {
                        _shadowcastingmodeProp = this._serializedProperty.FindPropertyRelative("ShadowCastingMode");
                    }
                    return _shadowcastingmodeProp;
                }
            }
            
            public bool ReceiveShadows
            {
                get
                {
                    return this.ReceiveShadowsProp.boolValue;
                }
                set
                {
                    this.ReceiveShadowsProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ReceiveShadowsProp
            {
                get
                {
                    if ((_receiveshadowsProp == null))
                    {
                        _receiveshadowsProp = this._serializedProperty.FindPropertyRelative("ReceiveShadows");
                    }
                    return _receiveshadowsProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _TextBlock : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _BaseRenderInfo _visibility;
            
            private UnityEditor.SerializedProperty _visibilityProp;
            
            private _Surface _surface;
            
            private UnityEditor.SerializedProperty _surfaceProp;
            
            private UnityEditor.SerializedProperty _previewsizeProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _BaseRenderInfo visibility
            {
                get
                {
                    if ((_visibility == null))
                    {
                        _visibility = new _BaseRenderInfo();
                        _visibility.SerializedProperty = this.visibilityProp;
                    }
                    return _visibility;
                }
            }
            
            public UnityEditor.SerializedProperty visibilityProp
            {
                get
                {
                    if ((_visibilityProp == null))
                    {
                        _visibilityProp = this._serializedProperty.FindPropertyRelative("visibility");
                    }
                    return _visibilityProp;
                }
            }
            
            public _Surface surface
            {
                get
                {
                    if ((_surface == null))
                    {
                        _surface = new _Surface();
                        _surface.SerializedProperty = this.surfaceProp;
                    }
                    return _surface;
                }
            }
            
            public UnityEditor.SerializedProperty surfaceProp
            {
                get
                {
                    if ((_surfaceProp == null))
                    {
                        _surfaceProp = this._serializedProperty.FindPropertyRelative("surface");
                    }
                    return _surfaceProp;
                }
            }
            
            public UnityEngine.Vector3 PreviewSize
            {
                get
                {
                    return this.PreviewSizeProp.vector3Value;
                }
                set
                {
                    this.PreviewSizeProp.vector3Value = value;
                }
            }
            
            public UnityEditor.SerializedProperty PreviewSizeProp
            {
                get
                {
                    if ((_previewsizeProp == null))
                    {
                        _previewsizeProp = this._serializedProperty.FindPropertyRelative("PreviewSize");
                    }
                    return _previewsizeProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _UIBlock : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _Layout _layout;
            
            private UnityEditor.SerializedProperty _layoutProp;
            
            private _AutoLayout _autolayout;
            
            private UnityEditor.SerializedProperty _autolayoutProp;
            
            private _BaseRenderInfo _visibility;
            
            private UnityEditor.SerializedProperty _visibilityProp;
            
            private _Surface _surface;
            
            private UnityEditor.SerializedProperty _surfaceProp;
            
            private UnityEditor.SerializedProperty _previewsizeProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _Layout layout
            {
                get
                {
                    if ((_layout == null))
                    {
                        _layout = new _Layout();
                        _layout.SerializedProperty = this.layoutProp;
                    }
                    return _layout;
                }
            }
            
            public UnityEditor.SerializedProperty layoutProp
            {
                get
                {
                    if ((_layoutProp == null))
                    {
                        _layoutProp = this._serializedProperty.FindPropertyRelative("layout");
                    }
                    return _layoutProp;
                }
            }
            
            public _AutoLayout autoLayout
            {
                get
                {
                    if ((_autolayout == null))
                    {
                        _autolayout = new _AutoLayout();
                        _autolayout.SerializedProperty = this.autoLayoutProp;
                    }
                    return _autolayout;
                }
            }
            
            public UnityEditor.SerializedProperty autoLayoutProp
            {
                get
                {
                    if ((_autolayoutProp == null))
                    {
                        _autolayoutProp = this._serializedProperty.FindPropertyRelative("autoLayout");
                    }
                    return _autolayoutProp;
                }
            }
            
            public _BaseRenderInfo visibility
            {
                get
                {
                    if ((_visibility == null))
                    {
                        _visibility = new _BaseRenderInfo();
                        _visibility.SerializedProperty = this.visibilityProp;
                    }
                    return _visibility;
                }
            }
            
            public UnityEditor.SerializedProperty visibilityProp
            {
                get
                {
                    if ((_visibilityProp == null))
                    {
                        _visibilityProp = this._serializedProperty.FindPropertyRelative("visibility");
                    }
                    return _visibilityProp;
                }
            }
            
            public _Surface surface
            {
                get
                {
                    if ((_surface == null))
                    {
                        _surface = new _Surface();
                        _surface.SerializedProperty = this.surfaceProp;
                    }
                    return _surface;
                }
            }
            
            public UnityEditor.SerializedProperty surfaceProp
            {
                get
                {
                    if ((_surfaceProp == null))
                    {
                        _surfaceProp = this._serializedProperty.FindPropertyRelative("surface");
                    }
                    return _surfaceProp;
                }
            }
            
            public UnityEngine.Vector3 PreviewSize
            {
                get
                {
                    return this.PreviewSizeProp.vector3Value;
                }
                set
                {
                    this.PreviewSizeProp.vector3Value = value;
                }
            }
            
            public UnityEditor.SerializedProperty PreviewSizeProp
            {
                get
                {
                    if ((_previewsizeProp == null))
                    {
                        _previewsizeProp = this._serializedProperty.FindPropertyRelative("PreviewSize");
                    }
                    return _previewsizeProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _UIBlock2D : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _UIBlock2DData _visuals;
            
            private UnityEditor.SerializedProperty _visualsProp;
            
            private UnityEditor.SerializedProperty _textureProp;
            
            private UnityEditor.SerializedProperty _spriteProp;
            
            private _BaseRenderInfo _visibility;
            
            private UnityEditor.SerializedProperty _visibilityProp;
            
            private _Surface _surface;
            
            private UnityEditor.SerializedProperty _surfaceProp;
            
            private UnityEditor.SerializedProperty _previewsizeProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _UIBlock2DData visuals
            {
                get
                {
                    if ((_visuals == null))
                    {
                        _visuals = new _UIBlock2DData();
                        _visuals.SerializedProperty = this.visualsProp;
                    }
                    return _visuals;
                }
            }
            
            public UnityEditor.SerializedProperty visualsProp
            {
                get
                {
                    if ((_visualsProp == null))
                    {
                        _visualsProp = this._serializedProperty.FindPropertyRelative("visuals");
                    }
                    return _visualsProp;
                }
            }
            
            public UnityEngine.Texture texture
            {
                get
                {
                    return ((UnityEngine.Texture)(this.textureProp.objectReferenceValue));
                }
                set
                {
                    this.textureProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty textureProp
            {
                get
                {
                    if ((_textureProp == null))
                    {
                        _textureProp = this._serializedProperty.FindPropertyRelative("texture");
                    }
                    return _textureProp;
                }
            }
            
            public UnityEngine.Sprite sprite
            {
                get
                {
                    return ((UnityEngine.Sprite)(this.spriteProp.objectReferenceValue));
                }
                set
                {
                    this.spriteProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty spriteProp
            {
                get
                {
                    if ((_spriteProp == null))
                    {
                        _spriteProp = this._serializedProperty.FindPropertyRelative("sprite");
                    }
                    return _spriteProp;
                }
            }
            
            public _BaseRenderInfo visibility
            {
                get
                {
                    if ((_visibility == null))
                    {
                        _visibility = new _BaseRenderInfo();
                        _visibility.SerializedProperty = this.visibilityProp;
                    }
                    return _visibility;
                }
            }
            
            public UnityEditor.SerializedProperty visibilityProp
            {
                get
                {
                    if ((_visibilityProp == null))
                    {
                        _visibilityProp = this._serializedProperty.FindPropertyRelative("visibility");
                    }
                    return _visibilityProp;
                }
            }
            
            public _Surface surface
            {
                get
                {
                    if ((_surface == null))
                    {
                        _surface = new _Surface();
                        _surface.SerializedProperty = this.surfaceProp;
                    }
                    return _surface;
                }
            }
            
            public UnityEditor.SerializedProperty surfaceProp
            {
                get
                {
                    if ((_surfaceProp == null))
                    {
                        _surfaceProp = this._serializedProperty.FindPropertyRelative("surface");
                    }
                    return _surfaceProp;
                }
            }
            
            public UnityEngine.Vector3 PreviewSize
            {
                get
                {
                    return this.PreviewSizeProp.vector3Value;
                }
                set
                {
                    this.PreviewSizeProp.vector3Value = value;
                }
            }
            
            public UnityEditor.SerializedProperty PreviewSizeProp
            {
                get
                {
                    if ((_previewsizeProp == null))
                    {
                        _previewsizeProp = this._serializedProperty.FindPropertyRelative("PreviewSize");
                    }
                    return _previewsizeProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _UIBlock2DData : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _colorProp;
            
            private _Length _cornerradius;
            
            private UnityEditor.SerializedProperty _cornerradiusProp;
            
            private _RadialFill _radialfill;
            
            private UnityEditor.SerializedProperty _radialfillProp;
            
            private _RadialGradient _gradient;
            
            private UnityEditor.SerializedProperty _gradientProp;
            
            private _Border _border;
            
            private UnityEditor.SerializedProperty _borderProp;
            
            private _Shadow _shadow;
            
            private UnityEditor.SerializedProperty _shadowProp;
            
            private _ImageData _image;
            
            private UnityEditor.SerializedProperty _imageProp;
            
            private UnityEditor.SerializedProperty _softenedgesProp;
            
            private UnityEditor.SerializedProperty _fillenabledProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Color Color
            {
                get
                {
                    return this.ColorProp.colorValue;
                }
                set
                {
                    this.ColorProp.colorValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ColorProp
            {
                get
                {
                    if ((_colorProp == null))
                    {
                        _colorProp = this._serializedProperty.FindPropertyRelative("Color");
                    }
                    return _colorProp;
                }
            }
            
            public _Length CornerRadius
            {
                get
                {
                    if ((_cornerradius == null))
                    {
                        _cornerradius = new _Length();
                        _cornerradius.SerializedProperty = this.CornerRadiusProp;
                    }
                    return _cornerradius;
                }
            }
            
            public UnityEditor.SerializedProperty CornerRadiusProp
            {
                get
                {
                    if ((_cornerradiusProp == null))
                    {
                        _cornerradiusProp = this._serializedProperty.FindPropertyRelative("CornerRadius");
                    }
                    return _cornerradiusProp;
                }
            }
            
            public _RadialFill RadialFill
            {
                get
                {
                    if ((_radialfill == null))
                    {
                        _radialfill = new _RadialFill();
                        _radialfill.SerializedProperty = this.RadialFillProp;
                    }
                    return _radialfill;
                }
            }
            
            public UnityEditor.SerializedProperty RadialFillProp
            {
                get
                {
                    if ((_radialfillProp == null))
                    {
                        _radialfillProp = this._serializedProperty.FindPropertyRelative("RadialFill");
                    }
                    return _radialfillProp;
                }
            }
            
            public _RadialGradient Gradient
            {
                get
                {
                    if ((_gradient == null))
                    {
                        _gradient = new _RadialGradient();
                        _gradient.SerializedProperty = this.GradientProp;
                    }
                    return _gradient;
                }
            }
            
            public UnityEditor.SerializedProperty GradientProp
            {
                get
                {
                    if ((_gradientProp == null))
                    {
                        _gradientProp = this._serializedProperty.FindPropertyRelative("Gradient");
                    }
                    return _gradientProp;
                }
            }
            
            public _Border Border
            {
                get
                {
                    if ((_border == null))
                    {
                        _border = new _Border();
                        _border.SerializedProperty = this.BorderProp;
                    }
                    return _border;
                }
            }
            
            public UnityEditor.SerializedProperty BorderProp
            {
                get
                {
                    if ((_borderProp == null))
                    {
                        _borderProp = this._serializedProperty.FindPropertyRelative("Border");
                    }
                    return _borderProp;
                }
            }
            
            public _Shadow Shadow
            {
                get
                {
                    if ((_shadow == null))
                    {
                        _shadow = new _Shadow();
                        _shadow.SerializedProperty = this.ShadowProp;
                    }
                    return _shadow;
                }
            }
            
            public UnityEditor.SerializedProperty ShadowProp
            {
                get
                {
                    if ((_shadowProp == null))
                    {
                        _shadowProp = this._serializedProperty.FindPropertyRelative("Shadow");
                    }
                    return _shadowProp;
                }
            }
            
            public _ImageData Image
            {
                get
                {
                    if ((_image == null))
                    {
                        _image = new _ImageData();
                        _image.SerializedProperty = this.ImageProp;
                    }
                    return _image;
                }
            }
            
            public UnityEditor.SerializedProperty ImageProp
            {
                get
                {
                    if ((_imageProp == null))
                    {
                        _imageProp = this._serializedProperty.FindPropertyRelative("Image");
                    }
                    return _imageProp;
                }
            }
            
            public bool SoftenEdges
            {
                get
                {
                    return this.SoftenEdgesProp.boolValue;
                }
                set
                {
                    this.SoftenEdgesProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty SoftenEdgesProp
            {
                get
                {
                    if ((_softenedgesProp == null))
                    {
                        _softenedgesProp = this._serializedProperty.FindPropertyRelative("SoftenEdges");
                    }
                    return _softenedgesProp;
                }
            }
            
            public bool FillEnabled
            {
                get
                {
                    return this.FillEnabledProp.boolValue;
                }
                set
                {
                    this.FillEnabledProp.boolValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty FillEnabledProp
            {
                get
                {
                    if ((_fillenabledProp == null))
                    {
                        _fillenabledProp = this._serializedProperty.FindPropertyRelative("FillEnabled");
                    }
                    return _fillenabledProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _UIBlock3D : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _UIBlock3DData _visuals;
            
            private UnityEditor.SerializedProperty _visualsProp;
            
            private _BaseRenderInfo _visibility;
            
            private UnityEditor.SerializedProperty _visibilityProp;
            
            private _Surface _surface;
            
            private UnityEditor.SerializedProperty _surfaceProp;
            
            private UnityEditor.SerializedProperty _previewsizeProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _UIBlock3DData visuals
            {
                get
                {
                    if ((_visuals == null))
                    {
                        _visuals = new _UIBlock3DData();
                        _visuals.SerializedProperty = this.visualsProp;
                    }
                    return _visuals;
                }
            }
            
            public UnityEditor.SerializedProperty visualsProp
            {
                get
                {
                    if ((_visualsProp == null))
                    {
                        _visualsProp = this._serializedProperty.FindPropertyRelative("visuals");
                    }
                    return _visualsProp;
                }
            }
            
            public _BaseRenderInfo visibility
            {
                get
                {
                    if ((_visibility == null))
                    {
                        _visibility = new _BaseRenderInfo();
                        _visibility.SerializedProperty = this.visibilityProp;
                    }
                    return _visibility;
                }
            }
            
            public UnityEditor.SerializedProperty visibilityProp
            {
                get
                {
                    if ((_visibilityProp == null))
                    {
                        _visibilityProp = this._serializedProperty.FindPropertyRelative("visibility");
                    }
                    return _visibilityProp;
                }
            }
            
            public _Surface surface
            {
                get
                {
                    if ((_surface == null))
                    {
                        _surface = new _Surface();
                        _surface.SerializedProperty = this.surfaceProp;
                    }
                    return _surface;
                }
            }
            
            public UnityEditor.SerializedProperty surfaceProp
            {
                get
                {
                    if ((_surfaceProp == null))
                    {
                        _surfaceProp = this._serializedProperty.FindPropertyRelative("surface");
                    }
                    return _surfaceProp;
                }
            }
            
            public UnityEngine.Vector3 PreviewSize
            {
                get
                {
                    return this.PreviewSizeProp.vector3Value;
                }
                set
                {
                    this.PreviewSizeProp.vector3Value = value;
                }
            }
            
            public UnityEditor.SerializedProperty PreviewSizeProp
            {
                get
                {
                    if ((_previewsizeProp == null))
                    {
                        _previewsizeProp = this._serializedProperty.FindPropertyRelative("PreviewSize");
                    }
                    return _previewsizeProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _UIBlock3DData : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _colorProp;
            
            private _Length _cornerradius;
            
            private UnityEditor.SerializedProperty _cornerradiusProp;
            
            private _Length _edgeradius;
            
            private UnityEditor.SerializedProperty _edgeradiusProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEngine.Color Color
            {
                get
                {
                    return this.ColorProp.colorValue;
                }
                set
                {
                    this.ColorProp.colorValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ColorProp
            {
                get
                {
                    if ((_colorProp == null))
                    {
                        _colorProp = this._serializedProperty.FindPropertyRelative("Color");
                    }
                    return _colorProp;
                }
            }
            
            public _Length CornerRadius
            {
                get
                {
                    if ((_cornerradius == null))
                    {
                        _cornerradius = new _Length();
                        _cornerradius.SerializedProperty = this.CornerRadiusProp;
                    }
                    return _cornerradius;
                }
            }
            
            public UnityEditor.SerializedProperty CornerRadiusProp
            {
                get
                {
                    if ((_cornerradiusProp == null))
                    {
                        _cornerradiusProp = this._serializedProperty.FindPropertyRelative("CornerRadius");
                    }
                    return _cornerradiusProp;
                }
            }
            
            public _Length EdgeRadius
            {
                get
                {
                    if ((_edgeradius == null))
                    {
                        _edgeradius = new _Length();
                        _edgeradius.SerializedProperty = this.EdgeRadiusProp;
                    }
                    return _edgeradius;
                }
            }
            
            public UnityEditor.SerializedProperty EdgeRadiusProp
            {
                get
                {
                    if ((_edgeradiusProp == null))
                    {
                        _edgeradiusProp = this._serializedProperty.FindPropertyRelative("EdgeRadius");
                    }
                    return _edgeradiusProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _UIBlockTool : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _m_targetProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_Targets
            {
                get
                {
                    return this._serializedProperty.FindPropertyRelative("m_Targets");
                }
            }
            
            public UnityEngine.Object m_Target
            {
                get
                {
                    return ((UnityEngine.Object)(this.m_TargetProp.objectReferenceValue));
                }
                set
                {
                    this.m_TargetProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_TargetProp
            {
                get
                {
                    if ((_m_targetProp == null))
                    {
                        _m_targetProp = this._serializedProperty.FindPropertyRelative("m_Target");
                    }
                    return _m_targetProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _UIEdgeSnapTool : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _m_targetProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_Targets
            {
                get
                {
                    return this._serializedProperty.FindPropertyRelative("m_Targets");
                }
            }
            
            public UnityEngine.Object m_Target
            {
                get
                {
                    return ((UnityEngine.Object)(this.m_TargetProp.objectReferenceValue));
                }
                set
                {
                    this.m_TargetProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_TargetProp
            {
                get
                {
                    if ((_m_targetProp == null))
                    {
                        _m_targetProp = this._serializedProperty.FindPropertyRelative("m_Target");
                    }
                    return _m_targetProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _UITool : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _m_targetProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_Targets
            {
                get
                {
                    return this._serializedProperty.FindPropertyRelative("m_Targets");
                }
            }
            
            public UnityEngine.Object m_Target
            {
                get
                {
                    return ((UnityEngine.Object)(this.m_TargetProp.objectReferenceValue));
                }
                set
                {
                    this.m_TargetProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty m_TargetProp
            {
                get
                {
                    if ((_m_targetProp == null))
                    {
                        _m_targetProp = this._serializedProperty.FindPropertyRelative("m_Target");
                    }
                    return _m_targetProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _VirtualBlockModule : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private UnityEditor.SerializedProperty _virtualblocksProp;
            
            private UnityEditor.SerializedProperty _childrenpervirtualblockProp;
            
            private UnityEditor.SerializedProperty _ownerProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public object virtualBlocks
            {
                set
                {
                    this.virtualBlocksProp.managedReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty virtualBlocksProp
            {
                get
                {
                    if ((_virtualblocksProp == null))
                    {
                        _virtualblocksProp = this._serializedProperty.FindPropertyRelative("virtualBlocks");
                    }
                    return _virtualblocksProp;
                }
            }
            
            public int childrenPerVirtualBlock
            {
                get
                {
                    return this.childrenPerVirtualBlockProp.intValue;
                }
                set
                {
                    this.childrenPerVirtualBlockProp.intValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty childrenPerVirtualBlockProp
            {
                get
                {
                    if ((_childrenpervirtualblockProp == null))
                    {
                        _childrenpervirtualblockProp = this._serializedProperty.FindPropertyRelative("childrenPerVirtualBlock");
                    }
                    return _childrenpervirtualblockProp;
                }
            }
            
            public Nova.CoreBlock owner
            {
                get
                {
                    return ((Nova.CoreBlock)(this.ownerProp.objectReferenceValue));
                }
                set
                {
                    this.ownerProp.objectReferenceValue = value;
                }
            }
            
            public UnityEditor.SerializedProperty ownerProp
            {
                get
                {
                    if ((_ownerProp == null))
                    {
                        _ownerProp = this._serializedProperty.FindPropertyRelative("owner");
                    }
                    return _ownerProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _VirtualUIBlock : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _Layout _layout;
            
            private UnityEditor.SerializedProperty _layoutProp;
            
            private _AutoLayout _autolayout;
            
            private UnityEditor.SerializedProperty _autolayoutProp;
            
            private _BaseRenderInfo _visualbase;
            
            private UnityEditor.SerializedProperty _visualbaseProp;
            
            private _Surface _surface;
            
            private UnityEditor.SerializedProperty _surfaceProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _Layout layout
            {
                get
                {
                    if ((_layout == null))
                    {
                        _layout = new _Layout();
                        _layout.SerializedProperty = this.layoutProp;
                    }
                    return _layout;
                }
            }
            
            public UnityEditor.SerializedProperty layoutProp
            {
                get
                {
                    if ((_layoutProp == null))
                    {
                        _layoutProp = this._serializedProperty.FindPropertyRelative("layout");
                    }
                    return _layoutProp;
                }
            }
            
            public _AutoLayout autoLayout
            {
                get
                {
                    if ((_autolayout == null))
                    {
                        _autolayout = new _AutoLayout();
                        _autolayout.SerializedProperty = this.autoLayoutProp;
                    }
                    return _autolayout;
                }
            }
            
            public UnityEditor.SerializedProperty autoLayoutProp
            {
                get
                {
                    if ((_autolayoutProp == null))
                    {
                        _autolayoutProp = this._serializedProperty.FindPropertyRelative("autoLayout");
                    }
                    return _autolayoutProp;
                }
            }
            
            public _BaseRenderInfo visualBase
            {
                get
                {
                    if ((_visualbase == null))
                    {
                        _visualbase = new _BaseRenderInfo();
                        _visualbase.SerializedProperty = this.visualBaseProp;
                    }
                    return _visualbase;
                }
            }
            
            public UnityEditor.SerializedProperty visualBaseProp
            {
                get
                {
                    if ((_visualbaseProp == null))
                    {
                        _visualbaseProp = this._serializedProperty.FindPropertyRelative("visualBase");
                    }
                    return _visualbaseProp;
                }
            }
            
            public _Surface surface
            {
                get
                {
                    if ((_surface == null))
                    {
                        _surface = new _Surface();
                        _surface.SerializedProperty = this.surfaceProp;
                    }
                    return _surface;
                }
            }
            
            public UnityEditor.SerializedProperty surfaceProp
            {
                get
                {
                    if ((_surfaceProp == null))
                    {
                        _surfaceProp = this._serializedProperty.FindPropertyRelative("surface");
                    }
                    return _surfaceProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _VirtualUIBlock2D : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _UIBlock2DData _visuals;
            
            private UnityEditor.SerializedProperty _visualsProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _UIBlock2DData visuals
            {
                get
                {
                    if ((_visuals == null))
                    {
                        _visuals = new _UIBlock2DData();
                        _visuals.SerializedProperty = this.visualsProp;
                    }
                    return _visuals;
                }
            }
            
            public UnityEditor.SerializedProperty visualsProp
            {
                get
                {
                    if ((_visualsProp == null))
                    {
                        _visualsProp = this._serializedProperty.FindPropertyRelative("visuals");
                    }
                    return _visualsProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
        
        public class _VirtualUIBlock3D : Nova.Editor.Serialization.ISerializedPropertyWrapper
        {
            
            private UnityEditor.SerializedProperty _serializedProperty;
            
            private _UIBlock3DData _visuals;
            
            private UnityEditor.SerializedProperty _visualsProp;
            
            public UnityEditor.SerializedProperty SerializedProperty
            {
                get
                {
                    return this._serializedProperty;
                }
                set
                {
                    this._serializedProperty = value;
                }
            }
            
            public _UIBlock3DData visuals
            {
                get
                {
                    if ((_visuals == null))
                    {
                        _visuals = new _UIBlock3DData();
                        _visuals.SerializedProperty = this.visualsProp;
                    }
                    return _visuals;
                }
            }
            
            public UnityEditor.SerializedProperty visualsProp
            {
                get
                {
                    if ((_visualsProp == null))
                    {
                        _visualsProp = this._serializedProperty.FindPropertyRelative("visuals");
                    }
                    return _visualsProp;
                }
            }
            
            public void ApplyModifications()
            {
                this._serializedProperty.serializedObject.ApplyModifiedProperties();
            }
        }
    }
    
    internal class Names
    {
        
        public class Alignment
        {
            
            public static string X = "X";
            
            public static string Y = "Y";
            
            public static string Z = "Z";
        }
        
        public class AutoLayout
        {
            
            public static string Axis = "Axis";
            
            public static string Spacing = "Spacing";
            
            public static string SpacingMinMax = "SpacingMinMax";
            
            public static string AutoSpace = "AutoSpace";
            
            public static string ReverseOrder = "ReverseOrder";
            
            public static string alignment = "alignment";
            
            public static string Offset = "Offset";
            
            public static string Cross = "Cross";
        }
        
        public class AutoSize3
        {
            
            public static string X = "X";
            
            public static string Y = "Y";
            
            public static string Z = "Z";
        }
        
        public class BaseRenderInfo
        {
            
            public static string ZIndex = "ZIndex";
            
            public static string BlockType = "BlockType";
            
            public static string Visible = "Visible";
        }
        
        public class BlockTool
        {
            
            public static string m_Targets = "m_Targets";
            
            public static string m_Target = "m_Target";
        }
        
        public class Border
        {
            
            public static string Color = "Color";
            
            public static string Width = "Width";
            
            public static string Enabled = "Enabled";
            
            public static string Direction = "Direction";
        }
        
        public class ClipMask
        {
            
            public static string info = "info";
            
            public static string maskTexture = "maskTexture";
        }
        
        public class ClipMaskInfo
        {
            
            public static string Color = "Color";
            
            public static string Clip = "Clip";
        }
        
        public class CoreBlock
        {
            
            public static string sourceID = "sourceID";
        }
        
        public class CrossLayout
        {
            
            public static string Axis = "Axis";
            
            public static string Spacing = "Spacing";
            
            public static string SpacingMinMax = "SpacingMinMax";
            
            public static string AutoSpace = "AutoSpace";
            
            public static string ReverseOrder = "ReverseOrder";
            
            public static string alignment = "alignment";
            
            public static string ExpandToGrid = "ExpandToGrid";
        }
        
        public class DataStoreID
        {
            
            public static string val = "val";
        }
        
        public class GestureRecognizer
        {
            
            public static string ObstructDrags = "ObstructDrags";
            
            public static string DragThreshold = "DragThreshold";
            
            public static string LowAccuracyDragThreshold = "LowAccuracyDragThreshold";
            
            public static string ClickBehavior = "ClickBehavior";
            
            public static string navigable = "navigable";
            
            public static string onSelect = "onSelect";
            
            public static string autoSelect = "autoSelect";
            
            public static string Navigation = "Navigation";
        }
        
        public class GradientTool
        {
            
            public static string m_Targets = "m_Targets";
            
            public static string m_Target = "m_Target";
        }
        
        public class GridView
        {
            
            public static string crossAxis = "crossAxis";
            
            public static string crossAxisItemCount = "crossAxisItemCount";
            
            public static string virtualBlockSerializer = "virtualBlockSerializer";
        }
        
        public class ImageAdjustment
        {
            
            public static string CenterUV = "CenterUV";
            
            public static string UVScale = "UVScale";
            
            public static string PixelsPerUnitMultiplier = "PixelsPerUnitMultiplier";
            
            public static string scaleMode = "scaleMode";
        }
        
        public class ImageData
        {
            
            public static string Adjustment = "Adjustment";
            
            public static string Mode = "Mode";
        }
        
        public class Interactable
        {
            
            public static string draggable = "draggable";
            
            public static string GestureSpace = "GestureSpace";
            
            public static string ObstructDrags = "ObstructDrags";
            
            public static string DragThreshold = "DragThreshold";
            
            public static string LowAccuracyDragThreshold = "LowAccuracyDragThreshold";
            
            public static string ClickBehavior = "ClickBehavior";
            
            public static string onSelect = "onSelect";
            
            public static string autoSelect = "autoSelect";
            
            public static string Navigation = "Navigation";
        }
        
        public class ItemView
        {
            
            public static string visuals = "visuals";
        }
        
        public class Layout
        {
            
            public static string Size = "Size";
            
            public static string Position = "Position";
            
            public static string Padding = "Padding";
            
            public static string Margin = "Margin";
            
            public static string SizeMinMax = "SizeMinMax";
            
            public static string PositionMinMax = "PositionMinMax";
            
            public static string PaddingMinMax = "PaddingMinMax";
            
            public static string MarginMinMax = "MarginMinMax";
            
            public static string Alignment = "Alignment";
            
            public static string AutoSize = "AutoSize";
            
            public static string RotateSize = "RotateSize";
            
            public static string AspectRatio = "AspectRatio";
            
            public static string AspectRatioAxis = "AspectRatioAxis";
        }
        
        public class Length
        {
            
            public static string Raw = "Raw";
            
            public static string Type = "Type";
        }
        
        public class Length2
        {
            
            public static string X = "X";
            
            public static string Y = "Y";
        }
        
        public class Length3
        {
            
            public static string X = "X";
            
            public static string Y = "Y";
            
            public static string Z = "Z";
        }
        
        public class LengthBounds
        {
            
            public static string Left = "Left";
            
            public static string Right = "Right";
            
            public static string Bottom = "Bottom";
            
            public static string Top = "Top";
            
            public static string Front = "Front";
            
            public static string Back = "Back";
        }
        
        public class ListView
        {
            
            public static string listItemPrefabs = "listItemPrefabs";
            
            public static string outOfViewDistance = "outOfViewDistance";
            
            public static string _uiBlock = "_uiBlock";
        }
        
        public class MinMax
        {
            
            public static string Min = "Min";
            
            public static string Max = "Max";
        }
        
        public class MinMax3
        {
            
            public static string X = "X";
            
            public static string Y = "Y";
            
            public static string Z = "Z";
        }
        
        public class MinMaxBounds
        {
            
            public static string Left = "Left";
            
            public static string Right = "Right";
            
            public static string Bottom = "Bottom";
            
            public static string Top = "Top";
            
            public static string Front = "Front";
            
            public static string Back = "Back";
        }
        
        public class NavLink
        {
            
            public static string Type = "Type";
            
            public static string Fallback = "Fallback";
            
            public static string Target = "Target";
        }
        
        public class NavNode
        {
            
            public static string Left = "Left";
            
            public static string Right = "Right";
            
            public static string Down = "Down";
            
            public static string Up = "Up";
            
            public static string Forward = "Forward";
            
            public static string Back = "Back";
        }
        
        public class NovaSettings
        {
            
            public static string settings = "settings";
        }
        
        public class RadialFill
        {
            
            public static string Center = "Center";
            
            public static string Rotation = "Rotation";
            
            public static string FillAngle = "FillAngle";
            
            public static string Enabled = "Enabled";
        }
        
        public class RadialGradient
        {
            
            public static string Color = "Color";
            
            public static string Center = "Center";
            
            public static string Radius = "Radius";
            
            public static string Rotation = "Rotation";
            
            public static string Enabled = "Enabled";
        }
        
        public class ScreenSpace
        {
            
            public static string targetCamera = "targetCamera";
            
            public static string referenceResolution = "referenceResolution";
            
            public static string fillMode = "fillMode";
            
            public static string planeDistance = "planeDistance";
            
            public static string haveConfiguredSortGroup = "haveConfiguredSortGroup";
            
            public static string additionalCameras = "additionalCameras";
        }
        
        public class Scroller
        {
            
            public static string OverscrollEffect = "OverscrollEffect";
            
            public static string VectorScrollMultiplier = "VectorScrollMultiplier";
            
            public static string dragScrolling = "dragScrolling";
            
            public static string vectorScrolling = "vectorScrolling";
            
            public static string scrollbarVisual = "scrollbarVisual";
            
            public static string draggableScrollbar = "draggableScrollbar";
            
            public static string ObstructDrags = "ObstructDrags";
            
            public static string DragThreshold = "DragThreshold";
            
            public static string LowAccuracyDragThreshold = "LowAccuracyDragThreshold";
            
            public static string ClickBehavior = "ClickBehavior";
            
            public static string onSelect = "onSelect";
            
            public static string autoSelect = "autoSelect";
            
            public static string Navigation = "Navigation";
        }
        
        public class SettingsConfig
        {
            
            public static string LogFlags = "LogFlags";
            
            public static string PackedImagesEnabled = "PackedImagesEnabled";
            
            public static string PackedImageCopyMode = "PackedImageCopyMode";
            
            public static string SuperSampleText = "SuperSampleText";
            
            public static string EdgeSoftenWidth = "EdgeSoftenWidth";
            
            public static string UIBlock3DCornerDivisions = "UIBlock3DCornerDivisions";
            
            public static string UIBlock3DEdgeDivisions = "UIBlock3DEdgeDivisions";
            
            public static string UIBlock2DLightingModels = "UIBlock2DLightingModels";
            
            public static string TextBlockLightingModels = "TextBlockLightingModels";
            
            public static string UIBlock3DLightingModels = "UIBlock3DLightingModels";
            
            public static string ClickFrameDeltaThreshold = "ClickFrameDeltaThreshold";
        }
        
        public class Shadow
        {
            
            public static string Color = "Color";
            
            public static string Width = "Width";
            
            public static string Blur = "Blur";
            
            public static string Offset = "Offset";
            
            public static string Enabled = "Enabled";
            
            public static string Direction = "Direction";
        }
        
        public class SortGroup
        {
            
            public static string info = "info";
        }
        
        public class SortGroupInfo
        {
            
            public static string SortingOrder = "SortingOrder";
            
            public static string RenderQueue = "RenderQueue";
            
            public static string RenderOverOpaqueGeometry = "RenderOverOpaqueGeometry";
        }
        
        public class SpacingTool
        {
            
            public static string m_Targets = "m_Targets";
            
            public static string m_Target = "m_Target";
        }
        
        public class Surface
        {
            
            public static string specularColor = "specularColor";
            
            public static string param1 = "param1";
            
            public static string param2 = "param2";
            
            public static string LightingModel = "LightingModel";
            
            public static string ShadowCastingMode = "ShadowCastingMode";
            
            public static string ReceiveShadows = "ReceiveShadows";
        }
        
        public class TextBlock
        {
            
            public static string visibility = "visibility";
            
            public static string surface = "surface";
            
            public static string PreviewSize = "PreviewSize";
        }
        
        public class UIBlock
        {
            
            public static string layout = "layout";
            
            public static string autoLayout = "autoLayout";
            
            public static string visibility = "visibility";
            
            public static string surface = "surface";
            
            public static string PreviewSize = "PreviewSize";
        }
        
        public class UIBlock2D
        {
            
            public static string visuals = "visuals";
            
            public static string texture = "texture";
            
            public static string sprite = "sprite";
            
            public static string visibility = "visibility";
            
            public static string surface = "surface";
            
            public static string PreviewSize = "PreviewSize";
        }
        
        public class UIBlock2DData
        {
            
            public static string Color = "Color";
            
            public static string CornerRadius = "CornerRadius";
            
            public static string RadialFill = "RadialFill";
            
            public static string Gradient = "Gradient";
            
            public static string Border = "Border";
            
            public static string Shadow = "Shadow";
            
            public static string Image = "Image";
            
            public static string SoftenEdges = "SoftenEdges";
            
            public static string FillEnabled = "FillEnabled";
        }
        
        public class UIBlock3D
        {
            
            public static string visuals = "visuals";
            
            public static string visibility = "visibility";
            
            public static string surface = "surface";
            
            public static string PreviewSize = "PreviewSize";
        }
        
        public class UIBlock3DData
        {
            
            public static string Color = "Color";
            
            public static string CornerRadius = "CornerRadius";
            
            public static string EdgeRadius = "EdgeRadius";
        }
        
        public class UIBlockTool
        {
            
            public static string m_Targets = "m_Targets";
            
            public static string m_Target = "m_Target";
        }
        
        public class UIEdgeSnapTool
        {
            
            public static string m_Targets = "m_Targets";
            
            public static string m_Target = "m_Target";
        }
        
        public class UITool
        {
            
            public static string m_Targets = "m_Targets";
            
            public static string m_Target = "m_Target";
        }
        
        public class VirtualBlockModule
        {
            
            public static string virtualBlocks = "virtualBlocks";
            
            public static string childrenPerVirtualBlock = "childrenPerVirtualBlock";
            
            public static string owner = "owner";
        }
        
        public class VirtualUIBlock
        {
            
            public static string layout = "layout";
            
            public static string autoLayout = "autoLayout";
            
            public static string visualBase = "visualBase";
            
            public static string surface = "surface";
        }
        
        public class VirtualUIBlock2D
        {
            
            public static string visuals = "visuals";
        }
        
        public class VirtualUIBlock3D
        {
            
            public static string visuals = "visuals";
        }
    }
}
